// Emacs style mode select   -*- C++ -*-
//-----------------------------------------------------------------------------
//
// Copyright (C) 1993-1996 by id Software, Inc.
// Copyright (C) 1998-2000 by DooM Legacy Team.
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; either version 2
// of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//-----------------------------------------------------------------------------
/// \file
/// \brief Thing frame/state LUT

#ifndef __INFO__
#define __INFO__

// Needed for action function pointer handling.
#include "d_think.h"
#include "sounds.h"

#ifdef GDF
#include "w_wad.h"
typedef struct
{
	const char* Function;
	actionf_t Action;
} GDF_ActionInfo_t;
#endif

// IMPORTANT NOTE: If you add/remove from this list of action
// functions, don't forget to update them in dehacked.c!
void A_Explode();
void A_Pain();
void A_Fall();
void A_MonitorPop();
void A_Look();
void A_Chase();
void A_FaceTarget();
void A_Scream();
void A_BossDeath();
void A_CustomPower(); // Use this for a custom power
void A_GiveWeapon(); // Gives the player weapon(s)
void A_JumpShield(); // Obtained Jump Shield
void A_RingShield(); // Obtained Ring Shield
void A_RingBox(); // Obtained Ring Box
void A_Invincibility(); // Obtained Invincibility Box
void A_SuperSneakers(); // Obtained Super Sneakers Box
void A_BunnyHop(); // have bunny hop
void A_BubbleSpawn(); // Randomly spawn bubbles
void A_BubbleRise(); // Bubbles float to surface
void A_BubbleCheck(); // Don't draw if not underwater
void A_ExtraLife(); // Extra Life
void A_BombShield(); // Obtained Bomb Shield
void A_WaterShield(); // Obtained Water Shield
void A_ForceShield();
void A_GravityBox();
void A_ScoreRise(); // Rise the score logo
void A_ParticleSpawn();
void A_AttractChase(); // Ring Chase
void A_DropMine(); // Drop Mine from Skim or Jetty-Syn Bomber
void A_FishJump(); // Fish Jump
void A_ThrownRing(); // Sparkle trail for red ring
void A_GrenadeRing();
void A_SetSolidSteam();
void A_UnsetSolidSteam();
void A_SignPlayer();
void A_JetChase();
void A_JetbThink(); // Jetty-Syn Bomber Thinker
void A_JetgThink(); // Jetty-Syn Gunner Thinker
void A_JetgShoot(); // Jetty-Syn Shoot Function
void A_ShootBullet(); // JetgShoot without reactiontime setting
void A_MinusDigging();
void A_MinusPopup();
void A_MinusCheck();
void A_ChickenCheck();
void A_MouseThink(); // Mouse Thinker
void A_DetonChase(); // Deton Chaser
void A_CapeChase(); // Fake little Super Sonic cape
void A_RotateSpikeBall(); // Spike ball rotation
void A_MaceRotate();
void A_RockSpawn();
void A_SnowBall(); // Snowball function for Snow Buster
void A_CrawlaCommanderThink(); // Crawla Commander
void A_SmokeTrailer();
void A_RingExplode();
void A_OldRingExplode();
void A_MixUp();
void A_RecyclePowers();
void A_BossScream();
void A_Invinciblerize();
void A_DeInvinciblerize();
void A_GoopSplat();
void A_Boss2PogoSFX();
void A_EggmanBox();
void A_TurretFire();
void A_SuperTurretFire();
void A_TurretStop();
void A_JetJawRoam();
void A_JetJawChomp();
void A_PointyThink();
void A_CheckBuddy();
void A_HoodThink();
void A_ArrowCheck();
void A_SnailerThink();
void A_SharpChase();
void A_SharpSpin();
void A_VultureVtol();
void A_VultureCheck();
void A_SkimChase();
void A_SkullAttack();
void A_LobShot();
void A_CannonLook();
void A_FireShot();
void A_SuperFireShot();
void A_BossFireShot();
void A_SparkFollow();
void A_BuzzFly();
void A_GuardChase();
void A_SetReactionTime();
void A_Boss3TakeDamage();
void A_LinedefExecute();
void A_PlaySeeSound();
void A_PlayAttackSound();
void A_PlayActiveSound();
void A_1upThinker();
void A_BossZoom(); //Usused
void A_Boss1Chase();
void A_Boss2Chase();
void A_Boss2Pogo();
void A_BossJetFume();
void A_SpawnObjectAbsolute();
void A_SpawnObjectRelative();
void A_ChangeAngleRelative();
void A_ChangeAngleAbsolute();
void A_PlaySound();
void A_FindTarget();
void A_FindTracer();
void A_SetTics();
void A_SetRandomTics();
void A_ChangeColorRelative();
void A_ChangeColorAbsolute();
void A_SetBalloonColor();
void A_MoveRelative();
void A_MoveAbsolute();
void A_Thrust();
void A_ZThrust();
void A_SetTargetsTarget();
void A_SetObjectFlags();
void A_SetObjectFlags2();
void A_RandomState();
void A_RandomStateRange();
void A_DualAction();
#ifdef PARTICLES
void A_EmitParticle();
void A_EmitLightParticle();
void A_EmitStarParticle();
#endif
void A_RemoteAction();
void A_ToggleFlameJet();
#ifdef SRB2K
void A_FlameShield();
void A_LightningShield();
void A_BubbleShield();
#endif
void A_SetSkyBoxMobj();
void A_SetSkyBoxCenterMobj();

// ratio of states to sprites to mobj types is roughly 6 : 1 : 1
#define NUMMOBJFREESLOTS 128
#define NUMSPRITEFREESLOTS NUMMOBJFREESLOTS
#define NUMSTATEFREESLOTS (NUMMOBJFREESLOTS*6)
// Don't forget about the sprite lights in hw_light.c!
// NOTE: This table goes with the info.c sprite list! ZTODO: CLEAN UP
typedef enum
{
	SPR_PLAY,

	// Enemies
	SPR_POSS,
	SPR_SPOS,
	SPR_FISH, // Greenflower Fish
	SPR_BUZZ, // Buzz (Gold)
	SPR_RBUZ, // Buzz (Red)
	SPR_JETB, // Jetty-Syn Bomber
	SPR_JETG, // Jetty-Syn Gunner
	SPR_CCOM, // Crawla Commander
	SPR_DETN, // Deton
	SPR_SKIM, // Skim mine dropper
	SPR_TRET,
	SPR_TURR, // Pop-Up Turret
	SPR_SHRP, // Sharp
	SPR_JJAW, // Jet Jaw
	SPR_SNLR, // Snailer
	SPR_VLTR, // Vulture
	SPR_PNTY, // Pointy
	SPR_ARCH, // Robo-Hood
	SPR_CBFS, // CastleBot FaceStabber (Egg Knight?)
	SPR_SPSH, // Egg Guard
	SPR_ESHI, // Egg Shield for Egg Guard
	SPR_GSNP, // Green Snapper
	SPR_MNUS, // Minus

	// Generic Boss Items
	SPR_BPLD, // Boss Explosions
	SPR_JETF, // Boss jet fumes

	// Boss 1 (Greenflower)
	SPR_EGGM,

	// Boss 2 (Techno Hill)
	SPR_EGGN, // Boss 2
	SPR_TNKA, // Boss 2 Tank 1
	SPR_TNKB, // Boss 2 Tank 2
	SPR_SPNK, // Boss 2 Spigot
	SPR_GOOP, // Boss 2 Goop

	// Boss 3 (Deep Sea)
	SPR_EGGO, // Boss 3
	SPR_PRPL, // Boss 3 Propeller

	// Boss 4 (Castle Eggman)
	SPR_EGGP,

	// Boss 5 (Arid Canyon)
	SPR_EGGQ,

	// Boss 6 (Red Volcano)
	SPR_EGGR,

	// Boss 7 (Dark City)
	SPR_BRAK,
	SPR_BGOO, // Goop
	SPR_BMSL,

	// Boss 8 (Egg Rock)
	SPR_EGGT,

	// Metal Sonic
	SPR_METL,

	// Collectible Items
	SPR_RING,
	SPR_TRNG, // Team Rings
	SPR_EMMY, // emerald test
	SPR_TOKE, // Special Stage Token
	SPR_RFLG, // Red CTF Flag
	SPR_BFLG, // Blue CTF Flag
	SPR_NWNG, // NiGHTS Wing collectable item.
	SPR_EMBM, // Emblem
	SPR_CEMG, // Chaos Emeralds
	SPR_EMER, // Emerald Hunt

	// Interactive Objects
	SPR_FANS,
	SPR_BUBL, // water bubble source
	SPR_SIGN, // Level end sign
	SPR_STEM, // Steam riser
	SPR_SPIK, // Spike Ball
	SPR_SFLM, // Spin fire
	SPR_DSPK, // Ceiling spike
	SPR_USPK, // Floor spike
	SPR_STPT, // Starpost
	SPR_BMNE, // Big floating mine

	// Monitor Boxes
	SPR_SRBX,
	SPR_RRBX,
	SPR_BRBX,
	SPR_SHTV,
	SPR_PINV,
	SPR_YLTV,
	SPR_BLTV, // Force shield
	SPR_BKTV, // Bomb shield TV
	SPR_WHTV, // Jump shield TV
	SPR_GRTV,
	SPR_EGGB, // Eggman box
	SPR_MIXU, // Player mixing monitor
	SPR_RECY, // Recycler (power mixing) monitor
	SPR_QUES, // Random monitor
	SPR_GBTV, // Gravity boots TV

	// Monitor Miscellany
	SPR_MTEX, // Exploding monitor

	// Projectiles
	SPR_MISL,
	SPR_TORP, // Torpedo
	SPR_MINE, // Skim mine
	SPR_JBUL, // Jetty-Syn Bullet
	SPR_TRLS,
	SPR_CBLL, // Cannonball
	SPR_AROW, // Arrow

	// Greenflower Scenery
	SPR_FWR1,
	SPR_FWR2, // GFZ Sunflower
	SPR_FWR3, // GFZ budding flower
	SPR_FWR4,
	SPR_BUS1, // GFZ Bush w/ berries
	SPR_BUS2, // GFZ Bush w/o berries

	// Techno Hill Scenery
	SPR_THZP, // Techno Hill Zone Plant
	SPR_ALRM, // THZ2 Alarm

	// Deep Sea Scenery
	SPR_GARG, // Deep Sea Gargoyle
	SPR_SEWE, // Deep Sea Seaweed
	SPR_DRIP, // Dripping water
	SPR_CRL1, // Coral 1
	SPR_CRL2, // Coral 2
	SPR_CRL3, // Coral 3
	SPR_BCRY, // Blue Crystal

	// Castle Eggman Scenery
	SPR_CHAN, // CEZ Chain
	SPR_FLAM, // Flame
	SPR_ESTA, // Eggman esta una estatua!
	SPR_SMCH, // Small Mace Chain
	SPR_BMCH, // Big Mace Chain
	SPR_SMCE, // Small Mace
	SPR_BMCE, // Big Mace

	// Arid Canyon Scenery
	SPR_BTBL, // Big tumbleweed
	SPR_STBL, // Small tumbleweed
	SPR_CACT, // Cacti sprites

	// Red Volcano Scenery
	SPR_FLME, // Flame jet

	// Dark City Scenery

	// Egg Rock Scenery

	// Christmas Scenery
	SPR_XMS1,
	SPR_XMS2,
	SPR_XMS3,

	SPR_DBAL,

	// Powerup Indicators
	SPR_THOK, // Thok! mobj
	SPR_SORB, // Shield Orb
	SPR_IVSP, // invincibility sparkles
	SPR_SSPK, // Super Sonic Spark

	// Freed Animals
	SPR_BIRD, // Birdie freed!
	SPR_BUNY, // Bunny freed!
	SPR_MOUS, // Mouse
	SPR_CHIC, // Chicken
	SPR_COWZ, // Cow

	// Springs
	SPR_SPRY, // yellow spring
	SPR_SPRR, // red spring
	SPR_SPRB, // Blue springs
	SPR_SUDY,
	SPR_SUDR,
	SPR_YSPR, // Yellow Diagonal Spring
	SPR_RSPR, // Red Diagonal Spring
	SPR_YSUD, // Yellow Upside-Down Diagonal Spring
	SPR_RSUD, // Red Upside-Down Diagonal Spring

	// Environmental Effects
	SPR_RAIN, // Rain
	SPR_SNO1, // Snowflake
	SPR_SPLH, // Water Splish
	SPR_SPLA, // Water Splash
	SPR_SMOK,
	SPR_BUBP, // Small bubble
	SPR_BUBO, // Medium bubble
	SPR_BUBN, // Large bubble
	SPR_BUBM, // Extra Large (would you like fries with that?) bubble
	SPR_POPP, // Extra Large bubble goes POP!
	SPR_TFOG, // Teleport Fog
	SPR_SEED, // Sonic CD flower seed
	SPR_PRTL, // Particle (for fans, etc.)

	// Game Indicators
	SPR_SCOR, // Score logo
	SPR_DRWN, // Drowning Timer
	SPR_TTAG, // Tag Sign
	SPR_GFLG, // Got Flag sign

	// Ring Weapons
	SPR_RRNG, // Red Ring
	SPR_RNGB, // Bounce Ring
	SPR_RNGR, // Rail Ring
	SPR_RNGA, // Automatic Ring
	SPR_RNGE, // Explosion Ring
	SPR_RNGS, // Scatter Ring
	SPR_RNGG, // Grenade Ring

	SPR_PIKB, // Bounce Ring Pickup
	SPR_PIKR, // Rail Ring Pickup
	SPR_PIKA, // Automatic Ring Pickup
	SPR_PIKE, // Explosion Ring Pickup
	SPR_PIKS, // Scatter Ring Pickup
	SPR_PIKG, // Grenade Ring Pickup

	SPR_TAUT, // Thrown Automatic Ring
	SPR_TGRE, // Thrown Grenade Ring
	SPR_TSCR, // Thrown Scatter Ring

	// Mario-specific stuff
	SPR_COIN,
	SPR_CPRK,
	SPR_GOOM,
	SPR_BGOM,
	SPR_FFWR,
	SPR_FBLL,
	SPR_SHLL,
	SPR_PUMA,
	SPR_HAMM,
	SPR_KOOP,
	SPR_BFLM,
	SPR_MAXE,
	SPR_MUS1,
	SPR_MUS2,
	SPR_TOAD,

	// NiGHTS Stuff
	SPR_NDRN, // NiGHTS drone
	SPR_SUPE, // NiGHTS character flying
	SPR_SUPZ, // NiGHTS hurt
	SPR_NDRL, // NiGHTS character drilling
	SPR_NSPK, // NiGHTS sparkle
	SPR_NBMP, // NiGHTS Bumper
	SPR_HOOP, // NiGHTS hoop sprite
	SPR_NSCR, // NiGHTS score sprite
	SPR_NPRA,
	SPR_NPRB,
	SPR_NPRC,
	SPR_CAPS, // Capsule thingy for NiGHTS

	// Utility Objects
	SPR_DISS, // dissipating object
	SPR_SUPT, // Super Sonic Transformation (NiGHTS)

	// Debris
	SPR_SPRK, // spark
	SPR_XPLD, // Robot Explosion
	SPR_WPLD, // Underwater Explosion

	// Stalagmites
	SPR_STG0,
	SPR_STG1,
	SPR_STG2,
	SPR_STG3,
	SPR_STG4,
	SPR_STG5,
	SPR_STG6,
	SPR_STG7,
	SPR_STG8,
	SPR_STG9,

	// Crumbly rocks
	SPR_ROIA,
	SPR_ROIB,
	SPR_ROIC,
	SPR_ROID,
	SPR_ROIE,
	SPR_ROIF,
	SPR_ROIG,
	SPR_ROIH,
	SPR_ROII,
	SPR_ROIJ,
	SPR_ROIK,
	SPR_ROIL,
	SPR_ROIM,
	SPR_ROIN,
	SPR_ROIO,
	SPR_ROIP,

	// Blue Spheres
	SPR_BBAL,

	// Gravity Well Objects
	SPR_GWLG,
	SPR_GWLR,

	// SRB1 Sprites
	SPR_SRBA,
	SPR_SRBB,
	SPR_SRBC,
	SPR_SRBD,
	SPR_SRBE,
	SPR_SRBF,
	SPR_SRBG,
	SPR_PXVI,
	SPR_SRBH,
	SPR_SRBI,
	SPR_SRBJ,
	SPR_SRBK,
	SPR_SRBL,
	SPR_SRBM,
	SPR_SRBN,
	SPR_SRBO,

	SPR_FIRSTFREESLOT,
	SPR_LASTFREESLOT = SPR_FIRSTFREESLOT + NUMSPRITEFREESLOTS - 1,

	// SRB2CB: New data, must be added after free slots to
	// maintain compatability with SOC modifications
    SPR_YSDS,
    SPR_RSDS,

    SPR_CBUM,

    SPR_BLON,

	SPR_HANG,
	SPR_SKAT,

	SPR_BBTV,
	SPR_FLTV,
	SPR_LTTV,

	NUMSPRITES
} spritenum_t;

// Object states (don't modify this comment!)
typedef enum
{
	S_NULL,

	S_PLAY_STND,
	S_PLAY_TAP1,
	S_PLAY_TAP2,
	S_PLAY_RUN1,
	S_PLAY_RUN2,
	S_PLAY_RUN3,
	S_PLAY_RUN4,
	S_PLAY_RUN5,
	S_PLAY_RUN6,
	S_PLAY_RUN7,
	S_PLAY_RUN8,
	S_PLAY_ATK1,
	S_PLAY_ATK2,
	S_PLAY_ATK3,
	S_PLAY_ATK4,
	S_PLAY_PLG1,
	S_PLAY_SPD1,
	S_PLAY_SPD2,
	S_PLAY_SPD3,
	S_PLAY_SPD4,
	S_PLAY_ABL1,
	S_PLAY_ABL2,
	S_PLAY_SPC1,
	S_PLAY_SPC2,
	S_PLAY_SPC3,
	S_PLAY_SPC4,
	S_PLAY_CLIMB1,
	S_PLAY_CLIMB2,
	S_PLAY_CLIMB3,
	S_PLAY_CLIMB4,
	S_PLAY_CLIMB5,
	S_PLAY_GASP,
	S_PLAY_PAIN,
	S_PLAY_DIE1,
	S_PLAY_DIE2,
	S_PLAY_DIE3,
	S_PLAY_TEETER1,
	S_PLAY_TEETER2,
	S_PLAY_FALL1,
	S_PLAY_FALL2,
	S_PLAY_CARRY,
	S_PLAY_SUPERSTAND,
	S_PLAY_SUPERWALK1,
	S_PLAY_SUPERWALK2,
	S_PLAY_SUPERFLY1,
	S_PLAY_SUPERFLY2,
	S_PLAY_SUPERTEETER,
	S_PLAY_SUPERHIT,
	S_PLAY_SUPERTRANS1,
	S_PLAY_SUPERTRANS2,
	S_PLAY_SUPERTRANS3,
	S_PLAY_SUPERTRANS4,
	S_PLAY_SUPERTRANS5,
	S_PLAY_SUPERTRANS6,
	S_PLAY_SUPERTRANS7,
	S_PLAY_SUPERTRANS8,
	S_PLAY_SUPERTRANS9, // This has special significance in the code. If you add more frames, search for it and make the appropriate changes.

	// 1-Up Box Sprites (uses player sprite)
	S_PLAY_BOX1A,
	S_PLAY_BOX1B,
	S_PLAY_BOX1C,
	S_PLAY_BOX1D,

	// Level end sign (uses player sprite)
	S_PLAY_SIGN,

	// Blue Crawla
	S_POSS_STND,
	S_POSS_STND2,
	S_POSS_RUN1,
	S_POSS_RUN2,
	S_POSS_RUN3,
	S_POSS_RUN4,
	S_POSS_RUN5,
	S_POSS_RUN6,

	// Red Crawla
	S_SPOS_STND,
	S_SPOS_STND2,
	S_SPOS_RUN1,
	S_SPOS_RUN2,
	S_SPOS_RUN3,
	S_SPOS_RUN4,
	S_SPOS_RUN5,
	S_SPOS_RUN6,

	// Greenflower Fish
	S_FISH1,
	S_FISH2,
	S_FISH3,
	S_FISH4,

	// Buzz (Gold)
	S_BUZZLOOK1,
	S_BUZZLOOK2,
	S_BUZZFLY1,
	S_BUZZFLY2,

	// Buzz (Red)
	S_RBUZZLOOK1,
	S_RBUZZLOOK2,
	S_RBUZZFLY1,
	S_RBUZZFLY2,

	// Jetty-Syn Bomber
	S_JETBLOOK1,
	S_JETBLOOK2,
	S_JETBZOOM1,
	S_JETBZOOM2,

	// Jetty-Syn Gunner
	S_JETGLOOK1,
	S_JETGLOOK2,
	S_JETGZOOM1,
	S_JETGZOOM2,
	S_JETGSHOOT1,
	S_JETGSHOOT2,

	// Crawla Commander
	S_CCOMMAND1,
	S_CCOMMAND2,
	S_CCOMMAND3,
	S_CCOMMAND4,

	// Deton
	S_DETON1,
	S_DETON2,
	S_DETON3,
	S_DETON4,
	S_DETON5,
	S_DETON6,
	S_DETON7,
	S_DETON8,
	S_DETON9,
	S_DETON10,
	S_DETON11,
	S_DETON12,
	S_DETON13,
	S_DETON14,
	S_DETON15,
	S_DETON16,

	// Skim Mine Dropper
	S_SKIM1,
	S_SKIM2,
	S_SKIM3,
	S_SKIM4,

	// THZ Turret
	S_TURRET,
	S_TURRETFIRE,
	S_TURRETSHOCK1,
	S_TURRETSHOCK2,
	S_TURRETSHOCK3,
	S_TURRETSHOCK4,
	S_TURRETSHOCK5,
	S_TURRETSHOCK6,
	S_TURRETSHOCK7,
	S_TURRETSHOCK8,
	S_TURRETSHOCK9,

	// Popup Turret
	S_TURRETLOOK,
	S_TURRETPOPUP1,
	S_TURRETPOPUP2,
	S_TURRETPOPUP3,
	S_TURRETPOPUP4,
	S_TURRETPOPUP5,
	S_TURRETPOPUP6,
	S_TURRETPOPUP7,
	S_TURRETPOPUP8,
	S_TURRETSHOOT,
	S_TURRETPOPDOWN1,
	S_TURRETPOPDOWN2,
	S_TURRETPOPDOWN3,
	S_TURRETPOPDOWN4,
	S_TURRETPOPDOWN5,
	S_TURRETPOPDOWN6,
	S_TURRETPOPDOWN7,
	S_TURRETPOPDOWN8,

	// Sharp
	S_SHARP_ROAM1,
	S_SHARP_ROAM2,
	S_SHARP_AIM1,
	S_SHARP_AIM2,
	S_SHARP_AIM3,
	S_SHARP_AIM4,
	S_SHARP_SPIN1,
	S_SHARP_SPIN2,
	S_SHARP_SPIN3,
	S_SHARP_SPIN4,
	S_SHARP_SPIN5,
	S_SHARP_SPIN6,
	S_SHARP_SPIN7,
	S_SHARP_SPIN8,

	// Jet Jaw
	S_JETJAW_ROAM1,
	S_JETJAW_ROAM2,
	S_JETJAW_ROAM3,
	S_JETJAW_ROAM4,
	S_JETJAW_ROAM5,
	S_JETJAW_ROAM6,
	S_JETJAW_ROAM7,
	S_JETJAW_ROAM8,
	S_JETJAW_CHOMP1,
	S_JETJAW_CHOMP2,
	S_JETJAW_CHOMP3,
	S_JETJAW_CHOMP4,
	S_JETJAW_CHOMP5,
	S_JETJAW_CHOMP6,
	S_JETJAW_CHOMP7,
	S_JETJAW_CHOMP8,
	S_JETJAW_CHOMP9,
	S_JETJAW_CHOMP10,
	S_JETJAW_CHOMP11,
	S_JETJAW_CHOMP12,
	S_JETJAW_CHOMP13,
	S_JETJAW_CHOMP14,
	S_JETJAW_CHOMP15,
	S_JETJAW_CHOMP16,

	// Snailer
	S_SNAILER1,

	// Vulture
	S_VULTURE_STND,
	S_VULTURE_VTOL1,
	S_VULTURE_VTOL2,
	S_VULTURE_VTOL3,
	S_VULTURE_VTOL4,
	S_VULTURE_ZOOM1,
	S_VULTURE_ZOOM2,
	S_VULTURE_ZOOM3,
	S_VULTURE_ZOOM4,
	S_VULTURE_ZOOM5,

	// Pointy
	S_POINTY1,
	S_POINTYBALL1,

	// Robo-Hood
	S_ROBOHOOD_LOOK,
	S_ROBOHOOD_STND,
	S_ROBOHOOD_SHOOT,
	S_ROBOHOOD_JUMP,
	S_ROBOHOOD_JUMP2,
	S_ROBOHOOD_FALL,

	// CastleBot FaceStabber
	S_FACESTABBER_STND1,
	S_FACESTABBER_STND2,
	S_FACESTABBER_STND3,
	S_FACESTABBER_STND4,
	S_FACESTABBER_STND5,
	S_FACESTABBER_STND6,
	S_FACESTABBER_CHARGE1,
	S_FACESTABBER_CHARGE2,
	S_FACESTABBER_CHARGE3,
	S_FACESTABBER_CHARGE4,

	// Egg Guard
	S_EGGGUARD_STND,
	S_EGGGUARD_WALK1,
	S_EGGGUARD_WALK2,
	S_EGGGUARD_WALK3,
	S_EGGGUARD_WALK4,
	S_EGGGUARD_MAD1,
	S_EGGGUARD_MAD2,
	S_EGGGUARD_MAD3,
	S_EGGGUARD_RUN1,
	S_EGGGUARD_RUN2,
	S_EGGGUARD_RUN3,
	S_EGGGUARD_RUN4,

	// Egg Shield for Egg Guard
	S_EGGSHIELD,

	// Green Snapper
	S_GSNAPPER_STND,
	S_GSNAPPER1,
	S_GSNAPPER2,
	S_GSNAPPER3,
	S_GSNAPPER4,

	// Minus
	S_MINUS_STND,
	S_MINUS_DIGGING,
	S_MINUS_POPUP,
	S_MINUS_UPWARD1,
	S_MINUS_UPWARD2,
	S_MINUS_UPWARD3,
	S_MINUS_UPWARD4,
	S_MINUS_UPWARD5,
	S_MINUS_UPWARD6,
	S_MINUS_UPWARD7,
	S_MINUS_UPWARD8,
	S_MINUS_DOWNWARD1,
	S_MINUS_DOWNWARD2,
	S_MINUS_DOWNWARD3,
	S_MINUS_DOWNWARD4,
	S_MINUS_DOWNWARD5,
	S_MINUS_DOWNWARD6,
	S_MINUS_DOWNWARD7,
	S_MINUS_DOWNWARD8,

	// Boss Explosion
	S_BPLD1,
	S_BPLD2,
	S_BPLD3,
	S_BPLD4,
	S_BPLD5,
	S_BPLD6,
	S_BPLD7,

	S_JETFUME1,
	S_JETFUME2,

	// Boss 1
	S_EGGMOBILE_STND,
	S_EGGMOBILE_LATK1,
	S_EGGMOBILE_LATK2,
	S_EGGMOBILE_LATK3,
	S_EGGMOBILE_LATK4,
	S_EGGMOBILE_LATK5,
	S_EGGMOBILE_LATK6,
	S_EGGMOBILE_LATK7,
	S_EGGMOBILE_LATK8,
	S_EGGMOBILE_LATK9,
	S_EGGMOBILE_LATK10,
	S_EGGMOBILE_RATK1,
	S_EGGMOBILE_RATK2,
	S_EGGMOBILE_RATK3,
	S_EGGMOBILE_RATK4,
	S_EGGMOBILE_RATK5,
	S_EGGMOBILE_RATK6,
	S_EGGMOBILE_RATK7,
	S_EGGMOBILE_RATK8,
	S_EGGMOBILE_RATK9,
	S_EGGMOBILE_RATK10,
	S_EGGMOBILE_PANIC1,
	S_EGGMOBILE_PANIC2,
	S_EGGMOBILE_PAIN,
	S_EGGMOBILE_PAIN2,
	S_EGGMOBILE_DIE1,
	S_EGGMOBILE_DIE2,
	S_EGGMOBILE_DIE3,
	S_EGGMOBILE_DIE4,
	S_EGGMOBILE_DIE5,
	S_EGGMOBILE_DIE6,
	S_EGGMOBILE_DIE7,
	S_EGGMOBILE_DIE8,
	S_EGGMOBILE_DIE9,
	S_EGGMOBILE_DIE10,
	S_EGGMOBILE_DIE11,
	S_EGGMOBILE_DIE12,
	S_EGGMOBILE_DIE13,
	S_EGGMOBILE_DIE14,
	S_EGGMOBILE_FLEE1,
	S_EGGMOBILE_FLEE2,

	// Boss 2
	S_EGGMOBILE2_STND,
	S_EGGMOBILE2_POGO1,
	S_EGGMOBILE2_POGO2,
	S_EGGMOBILE2_POGO3,
	S_EGGMOBILE2_POGO4,
	S_EGGMOBILE2_PAIN,
	S_EGGMOBILE2_PAIN2,
	S_EGGMOBILE2_DIE1,
	S_EGGMOBILE2_DIE2,
	S_EGGMOBILE2_DIE3,
	S_EGGMOBILE2_DIE4,
	S_EGGMOBILE2_DIE5,
	S_EGGMOBILE2_DIE6,
	S_EGGMOBILE2_DIE7,
	S_EGGMOBILE2_DIE8,
	S_EGGMOBILE2_DIE9,
	S_EGGMOBILE2_DIE10,
	S_EGGMOBILE2_DIE11,
	S_EGGMOBILE2_DIE12,
	S_EGGMOBILE2_DIE13,
	S_EGGMOBILE2_DIE14,
	S_EGGMOBILE2_FLEE1,
	S_EGGMOBILE2_FLEE2,

	S_BOSSTANK1,
	S_BOSSTANK2,
	S_BOSSSPIGOT,

	// Boss 2 Goop
	S_GOOP1,
	S_GOOP2,
	S_GOOP3,

	// Boss 3
	S_EGGMOBILE3_STND,
	S_EGGMOBILE3_ATK1,
	S_EGGMOBILE3_ATK2,
	S_EGGMOBILE3_ATK3A,
	S_EGGMOBILE3_ATK3B,
	S_EGGMOBILE3_ATK3C,
	S_EGGMOBILE3_ATK3D,
	S_EGGMOBILE3_ATK4,
	S_EGGMOBILE3_ATK5,
	S_EGGMOBILE3_LAUGH1,
	S_EGGMOBILE3_LAUGH2,
	S_EGGMOBILE3_LAUGH3,
	S_EGGMOBILE3_LAUGH4,
	S_EGGMOBILE3_LAUGH5,
	S_EGGMOBILE3_LAUGH6,
	S_EGGMOBILE3_LAUGH7,
	S_EGGMOBILE3_LAUGH8,
	S_EGGMOBILE3_LAUGH9,
	S_EGGMOBILE3_LAUGH10,
	S_EGGMOBILE3_LAUGH11,
	S_EGGMOBILE3_LAUGH12,
	S_EGGMOBILE3_LAUGH13,
	S_EGGMOBILE3_LAUGH14,
	S_EGGMOBILE3_LAUGH15,
	S_EGGMOBILE3_LAUGH16,
	S_EGGMOBILE3_LAUGH17,
	S_EGGMOBILE3_LAUGH18,
	S_EGGMOBILE3_LAUGH19,
	S_EGGMOBILE3_LAUGH20,
	S_EGGMOBILE3_PAIN,
	S_EGGMOBILE3_PAIN2,
	S_EGGMOBILE3_DIE1,
	S_EGGMOBILE3_DIE2,
	S_EGGMOBILE3_DIE3,
	S_EGGMOBILE3_DIE4,
	S_EGGMOBILE3_DIE5,
	S_EGGMOBILE3_DIE6,
	S_EGGMOBILE3_DIE7,
	S_EGGMOBILE3_DIE8,
	S_EGGMOBILE3_DIE9,
	S_EGGMOBILE3_DIE10,
	S_EGGMOBILE3_DIE11,
	S_EGGMOBILE3_DIE12,
	S_EGGMOBILE3_DIE13,
	S_EGGMOBILE3_DIE14,
	S_EGGMOBILE3_FLEE1,
	S_EGGMOBILE3_FLEE2,

	// Boss 3 Propeller
	S_PROPELLER1,
	S_PROPELLER2,
	S_PROPELLER3,
	S_PROPELLER4,
	S_PROPELLER5,
	S_PROPELLER6,
	S_PROPELLER7,

	// Boss 4
	S_EGGMOBILE4_STND,

	// Black Eggman (Boss 7)
	S_BLACKEGG_STND,
	S_BLACKEGG_STND2,
	S_BLACKEGG_WALK1,
	S_BLACKEGG_WALK2,
	S_BLACKEGG_WALK3,
	S_BLACKEGG_WALK4,
	S_BLACKEGG_WALK5,
	S_BLACKEGG_WALK6,
	S_BLACKEGG_SHOOT1,
	S_BLACKEGG_SHOOT2,
	S_BLACKEGG_PAIN1,
	S_BLACKEGG_PAIN2,
	S_BLACKEGG_PAIN3,
	S_BLACKEGG_PAIN4,
	S_BLACKEGG_PAIN5,
	S_BLACKEGG_PAIN6,
	S_BLACKEGG_PAIN7,
	S_BLACKEGG_PAIN8,
	S_BLACKEGG_PAIN9,
	S_BLACKEGG_PAIN10,
	S_BLACKEGG_PAIN11,
	S_BLACKEGG_PAIN12,
	S_BLACKEGG_PAIN13,
	S_BLACKEGG_PAIN14,
	S_BLACKEGG_PAIN15,
	S_BLACKEGG_PAIN16,
	S_BLACKEGG_PAIN17,
	S_BLACKEGG_PAIN18,
	S_BLACKEGG_PAIN19,
	S_BLACKEGG_PAIN20,
	S_BLACKEGG_PAIN21,
	S_BLACKEGG_PAIN22,
	S_BLACKEGG_PAIN23,
	S_BLACKEGG_PAIN24,
	S_BLACKEGG_PAIN25,
	S_BLACKEGG_PAIN26,
	S_BLACKEGG_PAIN27,
	S_BLACKEGG_PAIN28,
	S_BLACKEGG_PAIN29,
	S_BLACKEGG_PAIN30,
	S_BLACKEGG_PAIN31,
	S_BLACKEGG_PAIN32,
	S_BLACKEGG_PAIN33,
	S_BLACKEGG_PAIN34,
	S_BLACKEGG_PAIN35,
	S_BLACKEGG_HITFACE1,
	S_BLACKEGG_HITFACE2,
	S_BLACKEGG_HITFACE3,
	S_BLACKEGG_HITFACE4,
	S_BLACKEGG_DIE1,
	S_BLACKEGG_DIE2,
	S_BLACKEGG_DIE3,
	S_BLACKEGG_DIE4,
	S_BLACKEGG_DIE5,
	S_BLACKEGG_MISSILE1,
	S_BLACKEGG_MISSILE2,
	S_BLACKEGG_MISSILE3,
	S_BLACKEGG_GOOP,
	S_BLACKEGG_JUMP1,
	S_BLACKEGG_JUMP2,
	S_BLACKEGG_DESTROYPLAT1,
	S_BLACKEGG_DESTROYPLAT2,
	S_BLACKEGG_DESTROYPLAT3,

	S_BLACKEGG_HELPER, // Collision helper

	S_BLACKEGG_GOOP1,
	S_BLACKEGG_GOOP2,
	S_BLACKEGG_GOOP3,
	S_BLACKEGG_GOOP4,
	S_BLACKEGG_GOOP5,
	S_BLACKEGG_GOOP6,
	S_BLACKEGG_GOOP7,

	S_BLACKEGG_MISSILE,

	// Ring
	S_RING1,
	S_RING2,
	S_RING3,
	S_RING4,
	S_RING5,
	S_RING6,
	S_RING7,
	S_RING8,
	S_RING9,
	S_RING10,
	S_RING11,
	S_RING12,
	S_RING13,
	S_RING14,
	S_RING15,
	S_RING16,
	S_RING17,
	S_RING18,
	S_RING19,
	S_RING20,
	S_RING21,
	S_RING22,
	S_RING23,
	S_RING24,

	// Blue Sphere for special stages
	S_BLUEBALL,
	S_BLUEBALLSPARK,

	// Gravity Wells for special stages
	S_GRAVWELLGREEN,
	S_GRAVWELLGREEN2,
	S_GRAVWELLGREEN3,

	S_GRAVWELLRED,
	S_GRAVWELLRED2,
	S_GRAVWELLRED3,

	// Individual Team Rings
	S_TEAMRING1,
	S_TEAMRING2,
	S_TEAMRING3,
	S_TEAMRING4,
	S_TEAMRING5,
	S_TEAMRING6,
	S_TEAMRING7,
	S_TEAMRING8,
	S_TEAMRING9,
	S_TEAMRING10,
	S_TEAMRING11,
	S_TEAMRING12,
	S_TEAMRING13,
	S_TEAMRING14,
	S_TEAMRING15,
	S_TEAMRING16,
	S_TEAMRING17,
	S_TEAMRING18,
	S_TEAMRING19,
	S_TEAMRING20,
	S_TEAMRING21,
	S_TEAMRING22,
	S_TEAMRING23,
	S_TEAMRING24,

	// Special Stage Token
	S_EMMY1,
	S_EMMY2,
	S_EMMY3,
	S_EMMY4,
	S_EMMY5,
	S_EMMY6,
	S_EMMY7,

	// Special Stage Token
	S_TOKEN,

	// CTF Flags
	S_REDFLAG,
	S_BLUEFLAG,

	// Emblem
	S_EMBLEM1,

	// Chaos Emeralds
	S_CEMG1,
	S_CEMG2,
	S_CEMG3,
	S_CEMG4,
	S_CEMG5,
	S_CEMG6,
	S_CEMG7,

	// Emeralds (for hunt)
	S_EMER1,

	S_FAN,
	S_FAN2,
	S_FAN3,
	S_FAN4,
	S_FAN5,

	// Bubble Source
	S_BUBBLES1,
	S_BUBBLES2,

	// Level End Sign
	S_SIGN1,
	S_SIGN2,
	S_SIGN3,
	S_SIGN4,
	S_SIGN5,
	S_SIGN6,
	S_SIGN7,
	S_SIGN8,
	S_SIGN9,
	S_SIGN10,
	S_SIGN11,
	S_SIGN12,
	S_SIGN13,
	S_SIGN14,
	S_SIGN15,
	S_SIGN16,
	S_SIGN17,
	S_SIGN18,
	S_SIGN19,
	S_SIGN20,
	S_SIGN21,
	S_SIGN22,
	S_SIGN23,
	S_SIGN24,
	S_SIGN25,
	S_SIGN26,
	S_SIGN27,
	S_SIGN28,
	S_SIGN29,
	S_SIGN30,
	S_SIGN31,
	S_SIGN32,
	S_SIGN33,
	S_SIGN34,
	S_SIGN35,
	S_SIGN36,
	S_SIGN37,
	S_SIGN38,
	S_SIGN39,
	S_SIGN40,
	S_SIGN41,
	S_SIGN42,
	S_SIGN43,
	S_SIGN44,
	S_SIGN45,
	S_SIGN46,
	S_SIGN47,
	S_SIGN48,
	S_SIGN49,
	S_SIGN50,
	S_SIGN51,
	S_SIGN52, // Eggman
	S_SIGN53,

	// Steam Riser
	S_STEAM1,
	S_STEAM2,
	S_STEAM3,
	S_STEAM4,
	S_STEAM5,
	S_STEAM6,
	S_STEAM7,
	S_STEAM8,

	// Spike Ball
	S_SPIKEBALL1,
	S_SPIKEBALL2,
	S_SPIKEBALL3,
	S_SPIKEBALL4,
	S_SPIKEBALL5,
	S_SPIKEBALL6,
	S_SPIKEBALL7,
	S_SPIKEBALL8,

	// Fire Shield's Spawn
	S_SPINFIRE1,
	S_SPINFIRE2,
	S_SPINFIRE3,
	S_SPINFIRE4,
	S_SPINFIRE5,
	S_SPINFIRE6,

	// Spikes
	S_CEILINGSPIKE,
	S_FLOORSPIKE,

	// Starpost
	S_STARPOST1,
	S_STARPOST2,
	S_STARPOST3,
	S_STARPOST4,
	S_STARPOST5,
	S_STARPOST6,
	S_STARPOST7,
	S_STARPOST8,
	S_STARPOST9,
	S_STARPOST10,
	S_STARPOST11,
	S_STARPOST12,
	S_STARPOST13,
	S_STARPOST14,
	S_STARPOST15,
	S_STARPOST16,
	S_STARPOST17,
	S_STARPOST18,
	S_STARPOST19,
	S_STARPOST20,
	S_STARPOST21,
	S_STARPOST22,
	S_STARPOST23,
	S_STARPOST24,
	S_STARPOST25,
	S_STARPOST26,
	S_STARPOST27,
	S_STARPOST28,
	S_STARPOST29,
	S_STARPOST30,
	S_STARPOST31,
	S_STARPOST32,
	S_STARPOST33,
	S_STARPOST34,

	// Big floating mine
	S_BIGMINE1,
	S_BIGMINE2,
	S_BIGMINE3,
	S_BIGMINE4,
	S_BIGMINE5,
	S_BIGMINE6,
	S_BIGMINE7,
	S_BIGMINE8,

	// Cannon Launcher
	S_CANNONLAUNCHER1,
	S_CANNONLAUNCHER2,
	S_CANNONLAUNCHER3,

	// Super Ring Box
	S_SUPERRINGBOX,
	S_SUPERRINGBOX1,
	S_SUPERRINGBOX2,
	S_SUPERRINGBOX3,

	// Red Team Ring Box
	S_REDRINGBOX,
	S_REDRINGBOX1,

	// Blue Team Ring Box
	S_BLUERINGBOX,
	S_BLUERINGBOX1,

	// Super Sneakers Box
	S_SHTV,
	S_SHTV1,
	S_SHTV2,
	S_SHTV3,

	// Invincibility Box
	S_PINV,
	S_PINV2,
	S_PINV3,
	S_PINV4,

	// 1-Up Box Remains
	S_PRUP1,

	// Ring Shield Box
	S_YLTV,
	S_YLTV1,
	S_YLTV2,
	S_YLTV3,

	// Force Shield Box
	S_BLTV1,
	S_BLTV2,
	S_BLTV3,
	S_BLTV4,

	// Bomb Shield Box
	S_BKTV1,
	S_BKTV2,
	S_BKTV3,
	S_BKTV4,

	// Jump Shield Box
	S_WHTV1,
	S_WHTV2,
	S_WHTV3,
	S_WHTV4,

	// Water Shield Box
	S_GRTV,
	S_GRTV1,
	S_GRTV2,
	S_GRTV3,

	// Eggman Box
	S_EGGTV1,
	S_EGGTV2,
	S_EGGTV3,
	S_EGGTV4,

	// Teleport Box
	S_MIXUPBOX1,
	S_MIXUPBOX2,
	S_MIXUPBOX3,
	S_MIXUPBOX4,

	// Recycler Box
	S_RECYCLETV1,
	S_RECYCLETV2,
	S_RECYCLETV3,
	S_RECYCLETV4,

	// Question Box
	S_RANDOMBOX1,
	S_RANDOMBOX2,
	S_RANDOMBOX3,

	// Gravity Boots Box
	S_GBTV1,
	S_GBTV2,
	S_GBTV3,
	S_GBTV4,

	// Monitor Explosion
	S_MONITOREXPLOSION1,
	S_MONITOREXPLOSION2,
	S_MONITOREXPLOSION3,
	S_MONITOREXPLOSION4,
	S_MONITOREXPLOSION5,

	S_ROCKET,

	S_TORPEDO,

	// Skim Mine, also used by Jetty-Syn bomber
	S_MINE1,
	S_MINE_BOOM1,
	S_MINE_BOOM2,
	S_MINE_BOOM3,
	S_MINE_BOOM4,

	// Jetty-Syn Bullet
	S_JETBULLET1,
	S_JETBULLET2,

	S_TURRETLASER,
	S_TURRETLASEREXPLODE1,
	S_TURRETLASEREXPLODE2,

	// Cannonball
	S_CANNONBALL1,

	// Arrow
	S_ARROW,
	S_ARROWUP,
	S_ARROWDOWN,

	S_GFZFLOWERA,
	S_GFZFLOWERA2,

	S_GFZFLOWERB1,
	S_GFZFLOWERB2,

	S_GFZFLOWERC1,

	S_BERRYBUSH,
	S_BUSH,

	// THZ Plant
	S_THZPLANT1,
	S_THZPLANT2,
	S_THZPLANT3,
	S_THZPLANT4,

	// THZ Alarm
	S_ALARM1,

	// Deep Sea Gargoyle
	S_GARGOYLE,

	// DSZ Seaweed
	S_SEAWEED1,
	S_SEAWEED2,
	S_SEAWEED3,
	S_SEAWEED4,
	S_SEAWEED5,
	S_SEAWEED6,

	// Dripping Water
	S_DRIPA1,
	S_DRIPA2,
	S_DRIPA3,
	S_DRIPA4,
	S_DRIPB1,
	S_DRIPC1,
	S_DRIPC2,

	// Coral 1
	S_CORAL1,

	// Coral 2
	S_CORAL2,

	// Coral 3
	S_CORAL3,

	// Blue Crystal
	S_BLUECRYSTAL1,

	// CEZ Chain
	S_CEZCHAIN,

	// Flame
	S_FLAME1,
	S_FLAME2,
	S_FLAME3,
	S_FLAME4,

	// Eggman Statue
	S_EGGSTATUE1,

	// CEZ Small Mace Chain
	S_SMALLMACECHAIN,

	// CEZ Big Mace Chain
	S_BIGMACECHAIN,

	// CEZ Small Mace
	S_SMALLMACE,

	// CEZ Big Mace
	S_BIGMACE,

	S_CEZFLOWER1,

	// Big Tumbleweed
	S_BIGTUMBLEWEED,
	S_BIGTUMBLEWEED_ROLL1,
	S_BIGTUMBLEWEED_ROLL2,
	S_BIGTUMBLEWEED_ROLL3,
	S_BIGTUMBLEWEED_ROLL4,
	S_BIGTUMBLEWEED_ROLL5,
	S_BIGTUMBLEWEED_ROLL6,
	S_BIGTUMBLEWEED_ROLL7,
	S_BIGTUMBLEWEED_ROLL8,

	// Little Tumbleweed
	S_LITTLETUMBLEWEED,
	S_LITTLETUMBLEWEED_ROLL1,
	S_LITTLETUMBLEWEED_ROLL2,
	S_LITTLETUMBLEWEED_ROLL3,
	S_LITTLETUMBLEWEED_ROLL4,
	S_LITTLETUMBLEWEED_ROLL5,
	S_LITTLETUMBLEWEED_ROLL6,
	S_LITTLETUMBLEWEED_ROLL7,
	S_LITTLETUMBLEWEED_ROLL8,

	// Cacti Sprites
	S_CACTI1,
	S_CACTI2,
	S_CACTI3,
	S_CACTI4,

	// Flame jet
	S_FLAMEJETSTND,
	S_FLAMEJETSTART,
	S_FLAMEJETSTOP,
	S_FLAMEJETFLAME1,
	S_FLAMEJETFLAME2,
	S_FLAMEJETFLAME3,

	// Xmas-specific stuff
	S_XMASPOLE,
	S_CANDYCANE,
	S_SNOWMAN,

	S_DBALL1,
	S_DBALL2,
	S_DBALL3,
	S_DBALL4,
	S_DBALL5,
	S_DBALL6,
	S_EGGSTATUE2,

	// Thok
	S_THOK1,

	// Shield Orb
	S_SORB1,
	S_SORB2,
	S_SORB3,
	S_SORB4,
	S_SORB5,
	S_SORB6,
	S_SORB7,
	S_SORB8,

	// Invincibility Sparkles
	S_IVSP1,
	S_IVSP2,
	S_IVSP3,
	S_IVSP4,
	S_IVSP5,
	S_IVSP6,
	S_IVSP7,
	S_IVSP8,
	S_IVSP9,
	S_IVSP10,
	S_IVSP11,
	S_IVSP12,
	S_IVSP13,
	S_IVSP14,
	S_IVSP15,
	S_IVSP16,
	S_IVSP17,
	S_IVSP18,
	S_IVSP19,
	S_IVSP20,
	S_IVSP21,
	S_IVSP22,
	S_IVSP23,
	S_IVSP24,
	S_IVSP25,
	S_IVSP26,
	S_IVSP27,
	S_IVSP28,
	S_IVSP29,
	S_IVSP30,
	S_IVSP31,
	S_IVSP32,

	// Super Sonic Spark
	S_SSPK1,
	S_SSPK2,
	S_SSPK3,
	S_SSPK4,
	S_SSPK5,

	// Freed Birdie
	S_BIRD1,
	S_BIRD2,
	S_BIRD3,

	// Freed Bunny
	S_BUNNY1,
	S_BUNNY2,
	S_BUNNY3,
	S_BUNNY4,
	S_BUNNY5,
	S_BUNNY6,
	S_BUNNY7,
	S_BUNNY8,
	S_BUNNY9,
	S_BUNNY10,

	// Freed Mouse
	S_MOUSE1,
	S_MOUSE2,

	// Freed Chicken
	S_CHICKEN1,
	S_CHICKENHOP,
	S_CHICKENFLY1,
	S_CHICKENFLY2,

	// Freed Cow
	S_COW1,
	S_COW2,
	S_COW3,
	S_COW4,

	S_YELLOWSPRING,
	S_YELLOWSPRING2,
	S_YELLOWSPRING3,
	S_YELLOWSPRING4,
	S_YELLOWSPRING5,

	S_REDSPRING,
	S_REDSPRING2,
	S_REDSPRING3,
	S_REDSPRING4,
	S_REDSPRING5,

	// Blue Springs
	S_BLUESPRING,
	S_BLUESPRING2,
	S_BLUESPRING3,
	S_BLUESPRING4,
	S_BLUESPRING5,

	S_YELLOWSPRINGUD,
	S_YELLOWSPRINGUD2,
	S_YELLOWSPRINGUD3,
	S_YELLOWSPRINGUD4,
	S_YELLOWSPRINGUD5,

	S_REDSPRINGUD,
	S_REDSPRINGUD2,
	S_REDSPRINGUD3,
	S_REDSPRINGUD4,
	S_REDSPRINGUD5,

	// Yellow Diagonal Spring
	S_YDIAG1,
	S_YDIAG2,
	S_YDIAG3,
	S_YDIAG4,
	S_YDIAG5,
	S_YDIAG6,
	S_YDIAG7,
	S_YDIAG8,

	// Red Diagonal Spring
	S_RDIAG1,
	S_RDIAG2,
	S_RDIAG3,
	S_RDIAG4,
	S_RDIAG5,
	S_RDIAG6,
	S_RDIAG7,
	S_RDIAG8,

	// Yellow Upside-Down Diagonal Spring
	S_YDIAGD1,
	S_YDIAGD2,
	S_YDIAGD3,
	S_YDIAGD4,
	S_YDIAGD5,
	S_YDIAGD6,
	S_YDIAGD7,
	S_YDIAGD8,

	// Red Upside-Down Diagonal Spring
	S_RDIAGD1,
	S_RDIAGD2,
	S_RDIAGD3,
	S_RDIAGD4,
	S_RDIAGD5,
	S_RDIAGD6,
	S_RDIAGD7,
	S_RDIAGD8,

	// Rain
	S_RAIN1,
	S_RAINRETURN,

	// Snowflake
	S_SNOW1,
	S_SNOW2,
	S_SNOW3,

	// Water Splish
	S_SPLISH1,
	S_SPLISH2,
	S_SPLISH3,
	S_SPLISH4,
	S_SPLISH5,
	S_SPLISH6,
	S_SPLISH7,
	S_SPLISH8,
	S_SPLISH9,

	// added water splash
	S_SPLASH1,
	S_SPLASH2,
	S_SPLASH3,

	// lava/slime damage burn smoke
	S_SMOK1,
	S_SMOK2,
	S_SMOK3,
	S_SMOK4,
	S_SMOK5,

	// Bubbles
	S_SMALLBUBBLE,
	S_SMALLBUBBLE1,
	S_MEDIUMBUBBLE,
	S_MEDIUMBUBBLE1,
	S_LARGEBUBBLE,
	S_EXTRALARGEBUBBLE, // breathable

	S_POP1, // Extra Large bubble goes POP!

	S_FOG1,
	S_FOG2,
	S_FOG3,
	S_FOG4,
	S_FOG5,
	S_FOG6,
	S_FOG7,
	S_FOG8,
	S_FOG9,
	S_FOG10,
	S_FOG11,
	S_FOG12,
	S_FOG13,
	S_FOG14,

	S_SEED,

	S_PARTICLE,
	S_PARTICLEGEN,

	// Score Logos
	S_SCRA, // 100
	S_SCRB, // 200
	S_SCRC, // 500
	S_SCRD, // 1000

	// Drowning Timer Numbers
	S_ZERO1,
	S_ONE1,
	S_TWO1,
	S_THREE1,
	S_FOUR1,
	S_FIVE1,

	// Tag Sign
	S_TTAG1,

	// Got Flag Sign
	S_GOTFLAG1,
	S_GOTFLAG2,
	S_GOTFLAG3,
	S_GOTFLAG4,

	// Red Ring
	S_RRNG1,
	S_RRNG2,
	S_RRNG3,
	S_RRNG4,
	S_RRNG5,
	S_RRNG6,
	S_RRNG7,

	// Bounce Ring
	S_BOUNCERING1,
	S_BOUNCERING2,
	S_BOUNCERING3,
	S_BOUNCERING4,
	S_BOUNCERING5,
	S_BOUNCERING6,
	S_BOUNCERING7,
	S_BOUNCERING8,
	S_BOUNCERING9,
	S_BOUNCERING10,
	S_BOUNCERING11,
	S_BOUNCERING12,
	S_BOUNCERING13,
	S_BOUNCERING14,
	S_BOUNCERING15,
	S_BOUNCERING16,
	S_BOUNCERING17,
	S_BOUNCERING18,
	S_BOUNCERING19,
	S_BOUNCERING20,
	S_BOUNCERING21,
	S_BOUNCERING22,
	S_BOUNCERING23,
	S_BOUNCERING24,
	S_BOUNCERING25,
	S_BOUNCERING26,
	S_BOUNCERING27,
	S_BOUNCERING28,
	S_BOUNCERING29,
	S_BOUNCERING30,
	S_BOUNCERING31,
	S_BOUNCERING32,
	S_BOUNCERING33,
	S_BOUNCERING34,
	S_BOUNCERING35,

	// Rail Ring
	S_RAILRING1,
	S_RAILRING2,
	S_RAILRING3,
	S_RAILRING4,
	S_RAILRING5,
	S_RAILRING6,
	S_RAILRING7,
	S_RAILRING8,
	S_RAILRING9,
	S_RAILRING10,
	S_RAILRING11,
	S_RAILRING12,
	S_RAILRING13,
	S_RAILRING14,
	S_RAILRING15,
	S_RAILRING16,
	S_RAILRING17,
	S_RAILRING18,
	S_RAILRING19,
	S_RAILRING20,
	S_RAILRING21,
	S_RAILRING22,
	S_RAILRING23,
	S_RAILRING24,
	S_RAILRING25,
	S_RAILRING26,
	S_RAILRING27,
	S_RAILRING28,
	S_RAILRING29,
	S_RAILRING30,
	S_RAILRING31,
	S_RAILRING32,
	S_RAILRING33,
	S_RAILRING34,
	S_RAILRING35,

	// Automatic Ring
	S_AUTOMATICRING1,
	S_AUTOMATICRING2,
	S_AUTOMATICRING3,
	S_AUTOMATICRING4,
	S_AUTOMATICRING5,
	S_AUTOMATICRING6,
	S_AUTOMATICRING7,
	S_AUTOMATICRING8,
	S_AUTOMATICRING9,
	S_AUTOMATICRING10,
	S_AUTOMATICRING11,
	S_AUTOMATICRING12,
	S_AUTOMATICRING13,
	S_AUTOMATICRING14,
	S_AUTOMATICRING15,
	S_AUTOMATICRING16,
	S_AUTOMATICRING17,
	S_AUTOMATICRING18,
	S_AUTOMATICRING19,
	S_AUTOMATICRING20,
	S_AUTOMATICRING21,
	S_AUTOMATICRING22,
	S_AUTOMATICRING23,
	S_AUTOMATICRING24,
	S_AUTOMATICRING25,
	S_AUTOMATICRING26,
	S_AUTOMATICRING27,
	S_AUTOMATICRING28,
	S_AUTOMATICRING29,
	S_AUTOMATICRING30,
	S_AUTOMATICRING31,
	S_AUTOMATICRING32,
	S_AUTOMATICRING33,
	S_AUTOMATICRING34,
	S_AUTOMATICRING35,

	// Explosion Ring
	S_EXPLOSIONRING1,
	S_EXPLOSIONRING2,
	S_EXPLOSIONRING3,
	S_EXPLOSIONRING4,
	S_EXPLOSIONRING5,
	S_EXPLOSIONRING6,
	S_EXPLOSIONRING7,
	S_EXPLOSIONRING8,
	S_EXPLOSIONRING9,
	S_EXPLOSIONRING10,
	S_EXPLOSIONRING11,
	S_EXPLOSIONRING12,
	S_EXPLOSIONRING13,
	S_EXPLOSIONRING14,
	S_EXPLOSIONRING15,
	S_EXPLOSIONRING16,
	S_EXPLOSIONRING17,
	S_EXPLOSIONRING18,
	S_EXPLOSIONRING19,
	S_EXPLOSIONRING20,
	S_EXPLOSIONRING21,
	S_EXPLOSIONRING22,
	S_EXPLOSIONRING23,
	S_EXPLOSIONRING24,
	S_EXPLOSIONRING25,
	S_EXPLOSIONRING26,
	S_EXPLOSIONRING27,
	S_EXPLOSIONRING28,
	S_EXPLOSIONRING29,
	S_EXPLOSIONRING30,
	S_EXPLOSIONRING31,
	S_EXPLOSIONRING32,
	S_EXPLOSIONRING33,
	S_EXPLOSIONRING34,
	S_EXPLOSIONRING35,

	// Scatter Ring
	S_SCATTERRING1,
	S_SCATTERRING2,
	S_SCATTERRING3,
	S_SCATTERRING4,
	S_SCATTERRING5,
	S_SCATTERRING6,
	S_SCATTERRING7,
	S_SCATTERRING8,
	S_SCATTERRING9,
	S_SCATTERRING10,
	S_SCATTERRING11,
	S_SCATTERRING12,
	S_SCATTERRING13,
	S_SCATTERRING14,
	S_SCATTERRING15,
	S_SCATTERRING16,
	S_SCATTERRING17,
	S_SCATTERRING18,
	S_SCATTERRING19,
	S_SCATTERRING20,
	S_SCATTERRING21,
	S_SCATTERRING22,
	S_SCATTERRING23,
	S_SCATTERRING24,
	S_SCATTERRING25,
	S_SCATTERRING26,
	S_SCATTERRING27,
	S_SCATTERRING28,
	S_SCATTERRING29,
	S_SCATTERRING30,
	S_SCATTERRING31,
	S_SCATTERRING32,
	S_SCATTERRING33,
	S_SCATTERRING34,
	S_SCATTERRING35,

	// Grenade Ring
	S_GRENADERING1,
	S_GRENADERING2,
	S_GRENADERING3,
	S_GRENADERING4,
	S_GRENADERING5,
	S_GRENADERING6,
	S_GRENADERING7,
	S_GRENADERING8,
	S_GRENADERING9,
	S_GRENADERING10,
	S_GRENADERING11,
	S_GRENADERING12,
	S_GRENADERING13,
	S_GRENADERING14,
	S_GRENADERING15,
	S_GRENADERING16,
	S_GRENADERING17,
	S_GRENADERING18,
	S_GRENADERING19,
	S_GRENADERING20,
	S_GRENADERING21,
	S_GRENADERING22,
	S_GRENADERING23,
	S_GRENADERING24,
	S_GRENADERING25,
	S_GRENADERING26,
	S_GRENADERING27,
	S_GRENADERING28,
	S_GRENADERING29,
	S_GRENADERING30,
	S_GRENADERING31,
	S_GRENADERING32,
	S_GRENADERING33,
	S_GRENADERING34,
	S_GRENADERING35,

	// Weapon pickup
	S_BOUNCEPICKUP1,
	S_BOUNCEPICKUP2,
	S_BOUNCEPICKUP3,
	S_BOUNCEPICKUP4,
	S_BOUNCEPICKUP5,
	S_BOUNCEPICKUP6,
	S_BOUNCEPICKUP7,
	S_BOUNCEPICKUP8,
	S_BOUNCEPICKUP9,
	S_BOUNCEPICKUP10,
	S_BOUNCEPICKUP11,
	S_BOUNCEPICKUP12,
	S_BOUNCEPICKUP13,
	S_BOUNCEPICKUP14,
	S_BOUNCEPICKUP15,
	S_BOUNCEPICKUP16,

	S_BOUNCEPICKUPFADE1,
	S_BOUNCEPICKUPFADE2,
	S_BOUNCEPICKUPFADE3,
	S_BOUNCEPICKUPFADE4,
	S_BOUNCEPICKUPFADE5,
	S_BOUNCEPICKUPFADE6,
	S_BOUNCEPICKUPFADE7,
	S_BOUNCEPICKUPFADE8,

	S_RAILPICKUP1,
	S_RAILPICKUP2,
	S_RAILPICKUP3,
	S_RAILPICKUP4,
	S_RAILPICKUP5,
	S_RAILPICKUP6,
	S_RAILPICKUP7,
	S_RAILPICKUP8,
	S_RAILPICKUP9,
	S_RAILPICKUP10,
	S_RAILPICKUP11,
	S_RAILPICKUP12,
	S_RAILPICKUP13,
	S_RAILPICKUP14,
	S_RAILPICKUP15,
	S_RAILPICKUP16,

	S_RAILPICKUPFADE1,
	S_RAILPICKUPFADE2,
	S_RAILPICKUPFADE3,
	S_RAILPICKUPFADE4,
	S_RAILPICKUPFADE5,
	S_RAILPICKUPFADE6,
	S_RAILPICKUPFADE7,
	S_RAILPICKUPFADE8,

	S_AUTOPICKUP1,
	S_AUTOPICKUP2,
	S_AUTOPICKUP3,
	S_AUTOPICKUP4,
	S_AUTOPICKUP5,
	S_AUTOPICKUP6,
	S_AUTOPICKUP7,
	S_AUTOPICKUP8,
	S_AUTOPICKUP9,
	S_AUTOPICKUP10,
	S_AUTOPICKUP11,
	S_AUTOPICKUP12,
	S_AUTOPICKUP13,
	S_AUTOPICKUP14,
	S_AUTOPICKUP15,
	S_AUTOPICKUP16,

	S_AUTOPICKUPFADE1,
	S_AUTOPICKUPFADE2,
	S_AUTOPICKUPFADE3,
	S_AUTOPICKUPFADE4,
	S_AUTOPICKUPFADE5,
	S_AUTOPICKUPFADE6,
	S_AUTOPICKUPFADE7,
	S_AUTOPICKUPFADE8,

	S_EXPLODEPICKUP1,
	S_EXPLODEPICKUP2,
	S_EXPLODEPICKUP3,
	S_EXPLODEPICKUP4,
	S_EXPLODEPICKUP5,
	S_EXPLODEPICKUP6,
	S_EXPLODEPICKUP7,
	S_EXPLODEPICKUP8,
	S_EXPLODEPICKUP9,
	S_EXPLODEPICKUP10,
	S_EXPLODEPICKUP11,
	S_EXPLODEPICKUP12,
	S_EXPLODEPICKUP13,
	S_EXPLODEPICKUP14,
	S_EXPLODEPICKUP15,
	S_EXPLODEPICKUP16,

	S_EXPLODEPICKUPFADE1,
	S_EXPLODEPICKUPFADE2,
	S_EXPLODEPICKUPFADE3,
	S_EXPLODEPICKUPFADE4,
	S_EXPLODEPICKUPFADE5,
	S_EXPLODEPICKUPFADE6,
	S_EXPLODEPICKUPFADE7,
	S_EXPLODEPICKUPFADE8,

	S_SCATTERPICKUP1,
	S_SCATTERPICKUP2,
	S_SCATTERPICKUP3,
	S_SCATTERPICKUP4,
	S_SCATTERPICKUP5,
	S_SCATTERPICKUP6,
	S_SCATTERPICKUP7,
	S_SCATTERPICKUP8,
	S_SCATTERPICKUP9,
	S_SCATTERPICKUP10,
	S_SCATTERPICKUP11,
	S_SCATTERPICKUP12,
	S_SCATTERPICKUP13,
	S_SCATTERPICKUP14,
	S_SCATTERPICKUP15,
	S_SCATTERPICKUP16,

	S_SCATTERPICKUPFADE1,
	S_SCATTERPICKUPFADE2,
	S_SCATTERPICKUPFADE3,
	S_SCATTERPICKUPFADE4,
	S_SCATTERPICKUPFADE5,
	S_SCATTERPICKUPFADE6,
	S_SCATTERPICKUPFADE7,
	S_SCATTERPICKUPFADE8,

	S_GRENADEPICKUP1,
	S_GRENADEPICKUP2,
	S_GRENADEPICKUP3,
	S_GRENADEPICKUP4,
	S_GRENADEPICKUP5,
	S_GRENADEPICKUP6,
	S_GRENADEPICKUP7,
	S_GRENADEPICKUP8,
	S_GRENADEPICKUP9,
	S_GRENADEPICKUP10,
	S_GRENADEPICKUP11,
	S_GRENADEPICKUP12,
	S_GRENADEPICKUP13,
	S_GRENADEPICKUP14,
	S_GRENADEPICKUP15,
	S_GRENADEPICKUP16,

	S_GRENADEPICKUPFADE1,
	S_GRENADEPICKUPFADE2,
	S_GRENADEPICKUPFADE3,
	S_GRENADEPICKUPFADE4,
	S_GRENADEPICKUPFADE5,
	S_GRENADEPICKUPFADE6,
	S_GRENADEPICKUPFADE7,
	S_GRENADEPICKUPFADE8,

	// Thrown Weapon Rings
	S_THROWNBOUNCE1,
	S_THROWNBOUNCE2,
	S_THROWNBOUNCE3,
	S_THROWNBOUNCE4,
	S_THROWNBOUNCE5,
	S_THROWNBOUNCE6,
	S_THROWNBOUNCE7,
	S_THROWNAUTOMATIC1,
	S_THROWNAUTOMATIC2,
	S_THROWNAUTOMATIC3,
	S_THROWNAUTOMATIC4,
	S_THROWNAUTOMATIC5,
	S_THROWNAUTOMATIC6,
	S_THROWNAUTOMATIC7,
	S_THROWNEXPLOSION1,
	S_THROWNEXPLOSION2,
	S_THROWNEXPLOSION3,
	S_THROWNEXPLOSION4,
	S_THROWNEXPLOSION5,
	S_THROWNEXPLOSION6,
	S_THROWNEXPLOSION7,
	S_THROWNGRENADE1,
	S_THROWNGRENADE2,
	S_THROWNGRENADE3,
	S_THROWNGRENADE4,
	S_THROWNGRENADE5,
	S_THROWNGRENADE6,
	S_THROWNGRENADE7,
	S_THROWNGRENADE8,
	S_THROWNGRENADE9,
	S_THROWNGRENADE10,
	S_THROWNGRENADE11,
	S_THROWNGRENADE12,
	S_THROWNGRENADE13,
	S_THROWNGRENADE14,
	S_THROWNGRENADE15,
	S_THROWNGRENADE16,
	S_THROWNGRENADE17,
	S_THROWNGRENADE18,
	S_THROWNSCATTER,

	S_RINGEXPLODE,

	S_COIN1,
	S_COIN2,
	S_COIN3,
	S_COINSPARKLE1,
	S_COINSPARKLE2,
	S_COINSPARKLE3,
	S_COINSPARKLE4,
	S_GOOMBA1,
	S_GOOMBA1B,
	S_GOOMBA2,
	S_GOOMBA3,
	S_GOOMBA4,
	S_GOOMBA5,
	S_GOOMBA6,
	S_GOOMBA7,
	S_GOOMBA8,
	S_GOOMBA9,
	S_GOOMBA_DEAD,
	S_BLUEGOOMBA1,
	S_BLUEGOOMBA1B,
	S_BLUEGOOMBA2,
	S_BLUEGOOMBA3,
	S_BLUEGOOMBA4,
	S_BLUEGOOMBA5,
	S_BLUEGOOMBA6,
	S_BLUEGOOMBA7,
	S_BLUEGOOMBA8,
	S_BLUEGOOMBA9,
	S_BLUEGOOMBA_DEAD,

	// Mario-specific stuff
	S_FIREFLOWER1,
	S_FIREFLOWER2,
	S_FIREFLOWER3,
	S_FIREFLOWER4,
	S_FIREBALL1,
	S_FIREBALL2,
	S_FIREBALL3,
	S_FIREBALL4,
	S_FIREBALLEXP1,
	S_FIREBALLEXP2,
	S_FIREBALLEXP3,
	S_SHELL,
	S_SHELL1,
	S_SHELL2,
	S_SHELL3,
	S_SHELL4,
	S_PUMA1,
	S_PUMA2,
	S_PUMA3,
	S_PUMA4,
	S_PUMA5,
	S_PUMA6,
	S_HAMMER1,
	S_HAMMER2,
	S_HAMMER3,
	S_HAMMER4,
	S_KOOPA1,
	S_KOOPA2,
	S_KOOPAFLAME1,
	S_KOOPAFLAME2,
	S_KOOPAFLAME3,
	S_AXE1,
	S_AXE2,
	S_AXE3,
	S_MARIOBUSH1,
	S_MARIOBUSH2,
	S_TOAD,

	// Nights-specific stuff
	S_NIGHTSDRONE1,
	S_NIGHTSDRONE2,
	S_NIGHTSFLY1A,
	S_NIGHTSFLY1B,
	S_NIGHTSFLY2A,
	S_NIGHTSFLY2B,
	S_NIGHTSFLY3A,
	S_NIGHTSFLY3B,
	S_NIGHTSFLY4A,
	S_NIGHTSFLY4B,
	S_NIGHTSFLY5A,
	S_NIGHTSFLY5B,
	S_NIGHTSFLY6A,
	S_NIGHTSFLY6B,
	S_NIGHTSFLY7A,
	S_NIGHTSFLY7B,
	S_NIGHTSFLY8A,
	S_NIGHTSFLY8B,
	S_NIGHTSFLY9A,
	S_NIGHTSFLY9B,
	S_NIGHTSHURT1,
	S_NIGHTSHURT2,
	S_NIGHTSHURT3,
	S_NIGHTSHURT4,
	S_NIGHTSHURT5,
	S_NIGHTSHURT6,
	S_NIGHTSHURT7,
	S_NIGHTSHURT8,
	S_NIGHTSHURT9,
	S_NIGHTSHURT10,
	S_NIGHTSHURT11,
	S_NIGHTSHURT12,
	S_NIGHTSHURT13,
	S_NIGHTSHURT14,
	S_NIGHTSHURT15,
	S_NIGHTSHURT16,
	S_NIGHTSHURT17,
	S_NIGHTSHURT18,
	S_NIGHTSHURT19,
	S_NIGHTSHURT20,
	S_NIGHTSHURT21,
	S_NIGHTSHURT22,
	S_NIGHTSHURT23,
	S_NIGHTSHURT24,
	S_NIGHTSHURT25,
	S_NIGHTSHURT26,
	S_NIGHTSHURT27,
	S_NIGHTSHURT28,
	S_NIGHTSHURT29,
	S_NIGHTSHURT30,
	S_NIGHTSHURT31,
	S_NIGHTSHURT32,
	S_NIGHTSDRILL1A,
	S_NIGHTSDRILL1B,
	S_NIGHTSDRILL1C,
	S_NIGHTSDRILL1D,
	S_NIGHTSDRILL2A,
	S_NIGHTSDRILL2B,
	S_NIGHTSDRILL2C,
	S_NIGHTSDRILL2D,
	S_NIGHTSDRILL3A,
	S_NIGHTSDRILL3B,
	S_NIGHTSDRILL3C,
	S_NIGHTSDRILL3D,
	S_NIGHTSDRILL4A,
	S_NIGHTSDRILL4B,
	S_NIGHTSDRILL4C,
	S_NIGHTSDRILL4D,
	S_NIGHTSDRILL5A,
	S_NIGHTSDRILL5B,
	S_NIGHTSDRILL5C,
	S_NIGHTSDRILL5D,
	S_NIGHTSDRILL6A,
	S_NIGHTSDRILL6B,
	S_NIGHTSDRILL6C,
	S_NIGHTSDRILL6D,
	S_NIGHTSDRILL7A,
	S_NIGHTSDRILL7B,
	S_NIGHTSDRILL7C,
	S_NIGHTSDRILL7D,
	S_NIGHTSDRILL8A,
	S_NIGHTSDRILL8B,
	S_NIGHTSDRILL8C,
	S_NIGHTSDRILL8D,
	S_NIGHTSDRILL9A,
	S_NIGHTSDRILL9B,
	S_NIGHTSDRILL9C,
	S_NIGHTSDRILL9D,
	S_NIGHTSPARKLE1,
	S_NIGHTSPARKLE2,
	S_NIGHTSPARKLE3,
	S_NIGHTSPARKLE4,
	// NiGHTS bumper
	S_NIGHTSBUMPER1,
	S_NIGHTSBUMPER2,
	S_NIGHTSBUMPER3,
	S_NIGHTSBUMPER4,
	S_NIGHTSBUMPER5,
	S_NIGHTSBUMPER6,
	S_NIGHTSBUMPER7,
	S_NIGHTSBUMPER8,
	S_NIGHTSBUMPER9,
	S_NIGHTSBUMPER10,
	S_NIGHTSBUMPER11,
	S_NIGHTSBUMPER12,
	S_HOOP,
	S_NIGHTSCORE10,
	S_NIGHTSCORE20,
	S_NIGHTSCORE30,
	S_NIGHTSCORE40,
	S_NIGHTSCORE50,
	S_NIGHTSCORE60,
	S_NIGHTSCORE70,
	S_NIGHTSCORE80,
	S_NIGHTSCORE90,
	S_NIGHTSCORE100,
	S_NIGHTSCORE10_2,
	S_NIGHTSCORE20_2,
	S_NIGHTSCORE30_2,
	S_NIGHTSCORE40_2,
	S_NIGHTSCORE50_2,
	S_NIGHTSCORE60_2,
	S_NIGHTSCORE70_2,
	S_NIGHTSCORE80_2,
	S_NIGHTSCORE90_2,
	S_NIGHTSCORE100_2,
	S_NIGHTSWING,
	// NiGHTS Paraloop Powerups
	S_NIGHTSPOWERUP1,
	S_NIGHTSPOWERUP2,
	S_NIGHTSPOWERUP3,
	S_NIGHTSPOWERUP4,
	S_NIGHTSPOWERUP5,
	S_NIGHTSPOWERUP6,
	S_EGGCAPSULE,

	S_CRUMBLE1,
	S_CRUMBLE2,

	S_INVISIBLE, // state for invisible sprite
	// Dissipating Object
	S_DISS,
	S_SUPERTRANS1,
	S_SUPERTRANS2,
	S_SUPERTRANS3,
	S_SUPERTRANS4,
	S_SUPERTRANS5,
	S_SUPERTRANS6,
	S_SUPERTRANS7,
	S_SUPERTRANS8,
	S_SUPERTRANS9,

	// Spark
	S_SPRK1,
	S_SPRK2,
	S_SPRK3,
	S_SPRK4,
	S_SPRK5,
	S_SPRK6,
	S_SPRK7,
	S_SPRK8,
	S_SPRK9,
	S_SPRK10,
	S_SPRK11,
	S_SPRK12,
	S_SPRK13,
	S_SPRK14,
	S_SPRK15,
	S_SPRK16,

	// Robot Explosion
	S_XPLD1,
	S_XPLD2,
	S_XPLD3,
	S_XPLD4,

	// Underwater Explosion
	S_WPLD1,
	S_WPLD2,
	S_WPLD3,
	S_WPLD4,
	S_WPLD5,
	S_WPLD6,

	S_STG0,
	S_STG1,
	S_STG2,
	S_STG3,
	S_STG4,
	S_STG5,
	S_STG6,
	S_STG7,
	S_STG8,
	S_STG9,

	S_ROCKSPAWN,

	S_ROCKCRUMBLEA1,
	S_ROCKCRUMBLEA2,
	S_ROCKCRUMBLEA3,
	S_ROCKCRUMBLEA4,
	S_ROCKCRUMBLEA5,

	S_ROCKCRUMBLEB1,
	S_ROCKCRUMBLEB2,
	S_ROCKCRUMBLEB3,
	S_ROCKCRUMBLEB4,
	S_ROCKCRUMBLEB5,

	S_ROCKCRUMBLEC1,
	S_ROCKCRUMBLEC2,
	S_ROCKCRUMBLEC3,
	S_ROCKCRUMBLEC4,
	S_ROCKCRUMBLEC5,

	S_ROCKCRUMBLED1,
	S_ROCKCRUMBLED2,
	S_ROCKCRUMBLED3,
	S_ROCKCRUMBLED4,
	S_ROCKCRUMBLED5,

	S_ROCKCRUMBLEE1,
	S_ROCKCRUMBLEE2,
	S_ROCKCRUMBLEE3,
	S_ROCKCRUMBLEE4,
	S_ROCKCRUMBLEE5,

	S_ROCKCRUMBLEF1,
	S_ROCKCRUMBLEF2,
	S_ROCKCRUMBLEF3,
	S_ROCKCRUMBLEF4,
	S_ROCKCRUMBLEF5,

	S_ROCKCRUMBLEG1,
	S_ROCKCRUMBLEG2,
	S_ROCKCRUMBLEG3,
	S_ROCKCRUMBLEG4,
	S_ROCKCRUMBLEG5,

	S_ROCKCRUMBLEH1,
	S_ROCKCRUMBLEH2,
	S_ROCKCRUMBLEH3,
	S_ROCKCRUMBLEH4,
	S_ROCKCRUMBLEH5,

	S_ROCKCRUMBLEI1,
	S_ROCKCRUMBLEI2,
	S_ROCKCRUMBLEI3,
	S_ROCKCRUMBLEI4,
	S_ROCKCRUMBLEI5,

	S_ROCKCRUMBLEJ1,
	S_ROCKCRUMBLEJ2,
	S_ROCKCRUMBLEJ3,
	S_ROCKCRUMBLEJ4,
	S_ROCKCRUMBLEJ5,

	S_ROCKCRUMBLEK1,
	S_ROCKCRUMBLEK2,
	S_ROCKCRUMBLEK3,
	S_ROCKCRUMBLEK4,
	S_ROCKCRUMBLEK5,

	S_ROCKCRUMBLEL1,
	S_ROCKCRUMBLEL2,
	S_ROCKCRUMBLEL3,
	S_ROCKCRUMBLEL4,
	S_ROCKCRUMBLEL5,

	S_ROCKCRUMBLEM1,
	S_ROCKCRUMBLEM2,
	S_ROCKCRUMBLEM3,
	S_ROCKCRUMBLEM4,
	S_ROCKCRUMBLEM5,

	S_ROCKCRUMBLEN1,
	S_ROCKCRUMBLEN2,
	S_ROCKCRUMBLEN3,
	S_ROCKCRUMBLEN4,
	S_ROCKCRUMBLEN5,

	S_ROCKCRUMBLEO1,
	S_ROCKCRUMBLEO2,
	S_ROCKCRUMBLEO3,
	S_ROCKCRUMBLEO4,
	S_ROCKCRUMBLEO5,

	S_ROCKCRUMBLEP1,
	S_ROCKCRUMBLEP2,
	S_ROCKCRUMBLEP3,
	S_ROCKCRUMBLEP4,
	S_ROCKCRUMBLEP5,

	S_SRB1_CRAWLA1,
	S_SRB1_CRAWLA2,
	S_SRB1_CRAWLA3,
	S_SRB1_CRAWLA4,

	S_SRB1_BAT1,
	S_SRB1_BAT2,
	S_SRB1_BAT3,
	S_SRB1_BAT4,

	S_SRB1_ROBOFISH1,
	S_SRB1_ROBOFISH2,
	S_SRB1_ROBOFISH3,

	S_SRB1_VOLCANOGUY1,
	S_SRB1_VOLCANOGUY2,

	S_SRB1_HOPPY1,
	S_SRB1_HOPPY2,

	S_SRB1_HOPPYWATER1,
	S_SRB1_HOPPYWATER2,

	S_SRB1_HOPPYSKYLAB1,

	S_PXVI,

	S_SRB1_MMZFLYING1,
	S_SRB1_MMZFLYING2,
	S_SRB1_MMZFLYING3,
	S_SRB1_MMZFLYING4,
	S_SRB1_MMZFLYING5,

	S_SRB1_UFO1,
	S_SRB1_UFO2,

	S_SRB1_GRAYBOT1,
	S_SRB1_GRAYBOT2,
	S_SRB1_GRAYBOT3,
	S_SRB1_GRAYBOT4,
	S_SRB1_GRAYBOT5,
	S_SRB1_GRAYBOT6,

	S_SRB1_ROBOTOPOLIS1,
	S_SRB1_ROBOTOPOLIS2,

	S_SRB1_RBZBUZZ1,
	S_SRB1_RBZBUZZ2,

	S_SRB1_RBZSPIKES1,
	S_SRB1_RBZSPIKES2,

	S_SRB1_METALSONIC1,
	S_SRB1_METALSONIC2,
	S_SRB1_METALSONIC3,

	S_SRB1_GOLDBOT1,
	S_SRB1_GOLDBOT2,
	S_SRB1_GOLDBOT3,
	S_SRB1_GOLDBOT4,
	S_SRB1_GOLDBOT5,
	S_SRB1_GOLDBOT6,

	S_SRB1_GENREX1,
	S_SRB1_GENREX2,

	S_FIRSTFREESLOT,
	S_LASTFREESLOT = S_FIRSTFREESLOT + NUMSTATEFREESLOTS - 1,

	// SRB2CB: New data, must be added after free slots to
	// maintain compatability with SOC modifications
	S_LIGHTPARTICLE,
#ifdef SRB2K
	// Bounce Shield Orb
	S_BOUNCEORB1,
	S_BOUNCEORB2,
	S_BOUNCEORB3,
	S_BOUNCEORB4,
	S_BOUNCEORB5,
	S_BOUNCEORB6,
	S_BOUNCEORB7,
	S_BOUNCEORB8,

	// Electric shield
	S_ELECTRICORB1,
	S_ELECTRICORB2,
	S_ELECTRICORB3,
	S_ELECTRICORB4,
	S_ELECTRICORB5,
	S_ELECTRICORB6,
	S_ELECTRICORB7,
	S_ELECTRICORB8,


	// Red fire shield
	S_REDFIREORB1,
	S_REDFIREORB2,
	S_REDFIREORB3,
	S_REDFIREORB4,
	S_REDFIREORB5,
	S_REDFIREORB6,
	S_REDFIREORB7,
	S_REDFIREORB8,

	// Moniters

	S_BOUNCETV1,
	S_BOUNCETV2,
	S_BOUNCETV3,
	S_BOUNCETV4,

	S_REDFIRETV1,
	S_REDFIRETV2,
	S_REDFIRETV3,
	S_REDFIRETV4,

	S_ELECTRICTV1,
	S_ELECTRICTV2,
	S_ELECTRICTV3,
	S_ELECTRICTV4,
#endif

	S_TELEPORTER,

	S_SKYBOXVIEW,
	S_SKYBOXMAPCENTER,

    S_YELLOWSIDE,
    S_YELLOWSIDE2,
    S_YELLOWSIDE3,
    S_YELLOWSIDE4,
    S_YELLOWSIDE5,

	S_REDSIDE,
	S_REDSIDE2,
	S_REDSIDE3,
	S_REDSIDE4,
	S_REDSIDE5,

	S_CBUMPER,
	S_CBUMPER2,
	S_BALLOON,
	S_BALLOON2,
	S_BALLOON3,
	S_BALLOON4,
	S_BALLOON5,

	S_BALLOONR,
	S_BALLOONR2,
	S_BALLOONR3,
	S_BALLOONR4,
	S_BALLOONR5,
#ifdef PARTICLES
	S_SPARTICLE,
	S_SPARTICLE2,
	S_SPARTICLE3,
	S_SPARTICLE4,
	S_SPARTICLE5,
#endif

	S_PARTICLEFOUNTAIN,
	S_SPIRALFOUNTAIN,

	S_HANGGLIDER,
	S_SKATEBOARD,

	NUMSTATES
} statenum_t;

typedef struct
{
	spritenum_t sprite;
	ULONG frame; // we use the upper 16 bits for translucency and other shade effects
	long tics;
	actionf_t action;
	int var1;
	int var2;
	statenum_t nextstate;
} state_t;

extern state_t states[NUMSTATES];
extern char sprnames[NUMSPRITES + 1][5];

// Little flag for SOC editor (don't change this comment!)
typedef enum
{
	MT_PLAYER,
	// Enemies
	MT_BLUECRAWLA,
	MT_REDCRAWLA,
	MT_GFZFISH, // Greenflower Fish
	MT_GOLDBUZZ,
	MT_REDBUZZ,
	MT_JETTBOMBER, // Jetty-Syn Bomber
	MT_JETTGUNNER, // Jetty-Syn Gunner
	MT_CRAWLACOMMANDER, // Crawla Commander
	MT_DETON, // Deton
	MT_SKIM, // Skim mine dropper
	MT_TURRET,
	MT_POPUPTURRET,
	MT_SHARP, // Sharp
	MT_JETJAW, // Jet Jaw
	MT_SNAILER, // Snailer
	MT_VULTURE, // Vulture
	MT_POINTY, // Pointy
	MT_POINTYBALL, // Pointy Ball
	MT_ROBOHOOD, // Robo-Hood
	MT_FACESTABBER, // CastleBot FaceStabber
	MT_EGGGUARD, // Egg Guard
	MT_EGGSHIELD, // Egg Shield for Egg Guard
	MT_GSNAPPER, // Green Snapper
	MT_MINUS, // Minus

	// Generic Boss Items
	MT_BOSSEXPLODE,
	MT_BOSSFLYPOINT,
	MT_EGGTRAP,
	MT_BOSS3WAYPOINT,

	// Boss 1
	MT_EGGMOBILE,
	MT_JETFUME1,

	// Boss 2
	MT_EGGMOBILE2,
	MT_BOSSTANK1,
	MT_BOSSTANK2,
	MT_BOSSSPIGOT,
	MT_GOOP,

	// Boss 3
	MT_EGGMOBILE3,
	MT_PROPELLER,

	// Boss 4
	MT_EGGMOBILE4,

	// Black Eggman (Boss 7)
	MT_BLACKEGGMAN,
	MT_BLACKEGGMAN_HELPER,
	MT_BLACKEGGMAN_GOOPFIRE,
	MT_BLACKEGGMAN_MISSILE,

	// Collectible Items
	MT_RING,
	MT_FLINGRING, // Lost ring
	MT_BLUEBALL,  // Blue sphere replacement for special stages
	MT_BLUEBALLSPARK,
	MT_FLINGBALL, // Lost blue sphere
	MT_REDTEAMRING,  //Rings collectable by red team.
	MT_BLUETEAMRING, //Rings collectable by blue team.
	MT_EMMY, // emerald token for special stage
	MT_TOKEN, // Special Stage Token (uncollectible part)
	MT_REDFLAG, // Red CTF Flag
	MT_BLUEFLAG, // Blue CTF Flag
	MT_EMBLEM,
	MT_EMERALD1,
	MT_EMERALD2,
	MT_EMERALD3,
	MT_EMERALD4,
	MT_EMERALD5,
	MT_EMERALD6,
	MT_EMERALD7,
	MT_EMERHUNT, // Emerald Hunt
	MT_EMERALDSPAWN, // Emerald spawner w/ delay
	MT_FLINGEMERALD, // Lost emerald

	// Interactive Objects
	MT_FAN,
	MT_BUBBLES, // Bubble source
	MT_SIGN, // Level end sign
	MT_STEAM, // Steam riser
	MT_SPIKEBALL, // Spike Ball
	MT_SPECIALSPIKEBALL,
	MT_SPINFIRE,
	MT_CEILINGSPIKE,
	MT_FLOORSPIKE,
	MT_STARPOST,
	MT_BIGMINE,
	MT_BIGAIRMINE,
	MT_CANNONLAUNCHER,

	// Monitor Boxes
	MT_SUPERRINGBOX,
	MT_REDRINGBOX,
	MT_BLUERINGBOX,
	MT_SNEAKERTV,
	MT_INV,
	MT_PRUP, // 1up Box
	MT_YELLOWTV,
	MT_BLUETV,
	MT_BLACKTV, // Bomb shield TV
	MT_WHITETV, // Jump shield TV
	MT_GREENTV,
	MT_EGGMANBOX,
	MT_MIXUPBOX,
	MT_RECYCLETV,
	MT_RECYCLEICO,
	MT_QUESTIONBOX,
	MT_GRAVITYBOX,

	// Monitor miscellany
	MT_MONITOREXPLOSION,
	MT_RINGICO,
	MT_SHOESICO,
	MT_INVCICO,
	MT_1UPICO,
	MT_YSHIELDICO,
	MT_BSHIELDICO,
	MT_KSHIELDICO,
	MT_WSHIELDICO,
	MT_GSHIELDICO,
	MT_EGGMANICO,
	MT_MIXUPICO,
	MT_GRAVITYICO,

	// Projectiles
	MT_ROCKET,
	MT_TORPEDO,
	MT_MINE, // Skim/Jetty-Syn mine
	MT_JETTBULLET, // Jetty-Syn Bullet
	MT_TURRETLASER,
	MT_CANNONBALL, // Cannonball
	MT_CANNONBALLDECOR, // Decorative/still cannonball
	MT_ARROW, // Arrow

	// Greenflower Scenery
	MT_GFZFLOWER1,
	MT_GFZFLOWER2,
	MT_GFZFLOWER3,
	MT_BERRYBUSH,
	MT_BUSH,

	// Techno Hill Scenery
	MT_THZPLANT, // THZ Plant
	MT_ALARM,

	// Deep Sea Scenery
	MT_GARGOYLE, // Deep Sea Gargoyle
	MT_SEAWEED, // DSZ Seaweed
	MT_WATERDRIP, // Dripping Water source
	MT_WATERDROP, // Water drop from dripping water
	MT_CORAL1, // Coral 1
	MT_CORAL2, // Coral 2
	MT_CORAL3, // Coral 3
	MT_BLUECRYSTAL, // Blue Crystal

	// Castle Eggman Scenery
	MT_CHAIN, // CEZ Chain
	MT_FLAME, // Flame (has corona)
	MT_EGGSTATUE, // Eggman Statue
	MT_MACEPOINT, // Mace rotation point
	MT_SWINGMACEPOINT, // Mace swinging point
	MT_HANGMACEPOINT, // Hangable mace chain
	MT_SPINMACEPOINT, // Spin/Controllable mace chain
	MT_SMALLMACECHAIN, // Small Mace Chain
	MT_BIGMACECHAIN, // Big Mace Chain
	MT_SMALLMACE, // Small Mace
	MT_BIGMACE, // Big Mace
	MT_CEZFLOWER,

	// Arid Canyon Scenery
	MT_BIGTUMBLEWEED,
	MT_LITTLETUMBLEWEED,
	MT_CACTI1,
	MT_CACTI2,
	MT_CACTI3,
	MT_CACTI4,

	// Red Volcano Scenery
	MT_FLAMEJET,
	MT_VERTICALFLAMEJET,
	MT_FLAMEJETFLAME,

	// Dark City Scenery

	// Egg Rock Scenery

	// Christmas Scenery
	MT_XMASPOLE,
	MT_CANDYCANE,
	MT_SNOWMAN,

	MT_DBALL,
	MT_EGGSTATUE2,

	// Powerup Indicators
	MT_THOK, // Thok! mobj
	MT_GREENORB, // shield mobjs
	MT_YELLOWORB, // shield mobjs
	MT_BLUEORB, // shield mobjs
	MT_BLACKORB, // shield mobjs
	MT_WHITEORB, // shield mobjs
	MT_IVSP, // invincibility sparkles
	MT_SUPERSPARK, // Super Sonic Spark

	// Freed Animals
	MT_BIRD, // Birdie freed!
	MT_BUNNY, // Bunny freed!
	MT_MOUSE, // Mouse
	MT_CHICKEN, // Chicken
	MT_COW, // Cow

	// Springs
	MT_YELLOWSPRING,
	MT_REDSPRING,
	MT_BLUESPRING,
	MT_YELLOWSPRINGDOWN,
	MT_REDSPRINGDOWN,
	MT_YELLOWDIAG, // Yellow Diagonal Spring
	MT_REDDIAG, // Red Diagonal Spring
	MT_YELLOWDIAGDOWN, // Yellow Diagonal Upside-Down Spring
	MT_REDDIAGDOWN, // Red Diagonal Upside-Down Spring

	// Environmental Effects
	MT_RAIN, // Rain
	MT_SNOWFLAKE, // Snowflake
	MT_SPLISH, // Water splish!
	MT_SMOK,
	MT_SMALLBUBBLE, // small bubble
	MT_MEDIUMBUBBLE, // medium bubble
	MT_EXTRALARGEBUBBLE, // extra large bubble
	MT_POP, // Extra Large bubble goes POP!
	MT_TFOG,
	MT_SEED,
	MT_PARTICLE,
	MT_PARTICLEGEN, // For fans, etc.

	// Game Indicators
	MT_SCORE, // score logo
	MT_DROWNNUMBERS, // Drowning Timer
	MT_GOTEMERALD, // Chaos Emerald (intangible)
	MT_TAG, // Tag Sign
	MT_GOTFLAG, // Got Flag sign
	MT_GOTFLAG2, // Got Flag sign

	// Ambient Sounds
	MT_AWATERA, // Ambient Water Sound 1
	MT_AWATERB, // Ambient Water Sound 2
	MT_AWATERC, // Ambient Water Sound 3
	MT_AWATERD, // Ambient Water Sound 4
	MT_AWATERE, // Ambient Water Sound 5
	MT_AWATERF, // Ambient Water Sound 6
	MT_AWATERG, // Ambient Water Sound 7
	MT_AWATERH, // Ambient Water Sound 8
	MT_RANDOMAMBIENT,
	MT_RANDOMAMBIENT2,

	// Ring Weapons
	MT_REDRING,
	MT_BOUNCERING,
	MT_RAILRING,
	MT_AUTOMATICRING,
	MT_EXPLOSIONRING,
	MT_SCATTERRING,
	MT_GRENADERING,

	MT_BOUNCEPICKUP,
	MT_RAILPICKUP,
	MT_AUTOPICKUP,
	MT_EXPLODEPICKUP,
	MT_SCATTERPICKUP,
	MT_GRENADEPICKUP,

	MT_THROWNBOUNCE,
	MT_THROWNAUTOMATIC,
	MT_THROWNSCATTER,
	MT_THROWNEXPLOSION,
	MT_THROWNGRENADE,

	// Mario-specific stuff
	MT_COIN,
	MT_FLINGCOIN,
	MT_COINSPARKLE,
	MT_GOOMBA,
	MT_BLUEGOOMBA,
	MT_FIREFLOWER,
	MT_FIREBALL,
	MT_SHELL,
	MT_PUMA,
	MT_HAMMER,
	MT_KOOPA,
	MT_KOOPAFLAME,
	MT_AXE,
	MT_MARIOBUSH1,
	MT_MARIOBUSH2,
	MT_TOAD,

	// NiGHTS Stuff
	MT_AXIS,
	MT_AXISTRANSFER,
	MT_AXISTRANSFERLINE,
	MT_NIGHTSDRONE,
	MT_NIGHTSCHAR,
	MT_NIGHTSPARKLE,
	MT_NIGHTSBUMPER, // NiGHTS Bumper
	MT_HOOP,
	MT_HOOPCOLLIDE, // Collision detection for NiGHTS hoops
	MT_HOOPCENTER, // Center of a hoop
	MT_NIGHTSCORE,
	MT_NIGHTSWING,
	MT_NIGHTSSUPERLOOP,
	MT_NIGHTSDRILLREFILL,
	MT_NIGHTSHELPER,
	MT_EGGCAPSULE,

	// Utility Objects
	MT_CHAOSSPAWNER,
	MT_TELEPORTMAN,
	MT_ALTVIEWMAN,
	MT_CRUMBLEOBJ, // Sound generator for crumbling platform
	MT_DISS, // dissipating object
	MT_TUBEWAYPOINT,
	MT_PUSH,
	MT_PULL,
	MT_GHOST,
	MT_POLYANCHOR,
	MT_POLYSPAWN,
	MT_POLYSPAWNCRUSH,

	// Debris
	MT_SPARK, //spark
	MT_EXPLODE, // Robot Explosion
	MT_UWEXPLODE, // Underwater Explosion
	MT_STALAGMITE0,
	MT_STALAGMITE1,
	MT_STALAGMITE2,
	MT_STALAGMITE3,
	MT_STALAGMITE4,
	MT_STALAGMITE5,
	MT_STALAGMITE6,
	MT_STALAGMITE7,
	MT_STALAGMITE8,
	MT_STALAGMITE9,
	MT_ROCKSPAWNER,
	MT_FALLINGROCK,
	MT_ROCKCRUMBLE1,
	MT_ROCKCRUMBLE2,
	MT_ROCKCRUMBLE3,
	MT_ROCKCRUMBLE4,
	MT_ROCKCRUMBLE5,
	MT_ROCKCRUMBLE6,
	MT_ROCKCRUMBLE7,
	MT_ROCKCRUMBLE8,
	MT_ROCKCRUMBLE9,
	MT_ROCKCRUMBLE10,
	MT_ROCKCRUMBLE11,
	MT_ROCKCRUMBLE12,
	MT_ROCKCRUMBLE13,
	MT_ROCKCRUMBLE14,
	MT_ROCKCRUMBLE15,
	MT_ROCKCRUMBLE16,

	MT_SRB1_CRAWLA,
	MT_SRB1_BAT,
	MT_SRB1_ROBOFISH,
	MT_SRB1_VOLCANOGUY,
	MT_SRB1_HOPPY,
	MT_SRB1_HOPPYWATER,
	MT_SRB1_HOPPYSKYLAB,
	MT_SRB1_MMZFLYING,
	MT_PXVI,
	MT_SRB1_UFO,
	MT_SRB1_GRAYBOT,
	MT_SRB1_ROBOTOPOLIS,
	MT_SRB1_RBZBUZZ,
	MT_SRB1_RBZSPIKES,
	MT_SRB1_METALSONIC,
	MT_SRB1_GOLDBOT,
	MT_SRB1_GENREX,

	MT_FIRSTFREESLOT,
	MT_LASTFREESLOT = MT_FIRSTFREESLOT + NUMMOBJFREESLOTS - 1,

	// SRB2CB: New data, must be added after free slots to
	// maintain compatability with SOC modifications
#ifdef SRB2K
	MT_BOUNCEORB,
	MT_ELECTRICORB,
	MT_REDFIREORB,
	// Monitors
	MT_BOUNCETV,
	MT_ELECTRICTV,
	MT_REDFIRETV,
	// Icos
	MT_BOUNCESHIELDICO,
	MT_ELECTRICSHIELDICO,
	MT_REDFIRESHIELDICO,
#endif

    MT_YELLOWSIDE,
    MT_REDSIDE,

    MT_CBUMPER,
    MT_BALLOON,
	MT_BALLOONR,

#ifdef PARTICLES
	MT_LIGHTPARTICLE,
	MT_SPARTICLE,
	MT_PARTICLEFOUNTAIN,
	MT_SPIRALFOUNTAIN,
	MT_FSPIRALFOUNTAIN,
	MT_FPARTICLEFOUNTAIN,
#endif

	MT_BALLOONFOUNTAIN,
	MT_BALLOONFOUNTAIN2,

	MT_HANGGLIDER,
	MT_SKATEBOARD,

	MT_XTELEPORT,
	MT_YTELEPORT,
	MT_ZTELEPORT,
	MT_XYTELEPORT,
	MT_XYZTELEPORT,
	MT_ZXTELEPORT,
	MT_ZYTELEPORT,

	MT_SKYBOXVIEW,
	MT_SKYBOXMAPCENTER,

	MT_VERTEXFLOORSLOPE,
	MT_VERTEXCEILINGSLOPE,
	MT_SLOPEFLOORLINE,
	MT_SLOPECEILINGLINE,
	MT_SETFLOORSLOPE,
	MT_SETCEILINGSLOPE,
	MT_COPYFLOORSLOPE,
	MT_COPYCEILINGSLOPE,
	// NOTE: MT_ 's doomed numbers are NOT the same as refering to MT_ ->type
#ifdef SEENAMES
	MT_NAMECHECK,
#endif

	MT_VIRTUALPLAYER,

	NUMMOBJTYPES
} mobjtype_t;

typedef struct
{
	int doomednum; // Stands for doom editor number, //SRB2CBTODO: change this to mapeditnum
	statenum_t spawnstate;
	int spawnhealth;
	statenum_t seestate;
	sfxenum_t seesound;
	int reactiontime;
	sfxenum_t attacksound;
	statenum_t painstate;
	int painchance;
	sfxenum_t painsound;
	statenum_t meleestate;
	statenum_t missilestate;
	statenum_t deathstate;
	statenum_t xdeathstate;
	sfxenum_t deathsound;
	fixed_t speed;
	fixed_t radius;
	fixed_t height;
	int mass;
	int damage;
	sfxenum_t activesound;
	int flags;
	statenum_t raisestate;
} mobjinfo_t;

extern mobjinfo_t mobjinfo[NUMMOBJTYPES];

void P_PatchInfoTables(void);

void P_BackupTables(void);

void P_ResetData(int flags);

void P_InitExtraObjects(void); // For SRB2CB extra objects, they're easier to add this way // SRB2CBTODO: Add all objects this way

#ifdef GDF
int GDF_LoadGDF(void);

// Finding things
statenum_t GDF_FindState(char* state);
mobjtype_t GDF_FindMobjType(char* mobjtype);
spritenum_t GDF_FindSpriteNum(char* sprite);

#define MAX_GDFNAME 32
#define MAX_GDFSPRITEID 5
#define MAX_GDFACTIONNAME 32

typedef struct
	{
		char GDF_statename[MAX_GDFNAME];
		char GDF_sprite[MAX_GDFSPRITEID];
		int GDF_frame;
		byte GDF_lit;
		int GDF_duration;
		char GDF_actionname[MAX_GDFACTIONNAME];
		char GDF_nextstate[MAX_GDFNAME];
		int GDF_dehackednum;
	} GDFstate_t;

typedef struct
	{
		// Base info
		char GDF_thingname[MAX_GDFNAME];
		int GDF_dehackednum;

		// States
		char GDF_spawnstate[MAX_GDFNAME];
		char GDF_seestate[MAX_GDFNAME];
		char GDF_painstate[MAX_GDFNAME];
		char GDF_meleestate[MAX_GDFNAME];
		char GDF_missilestate[MAX_GDFNAME];
		char GDF_deathstate[MAX_GDFNAME];
		char GDF_xdeathstate[MAX_GDFNAME];
		char GDF_raisestate[MAX_GDFNAME];

		// Sounds
		char GDF_seesound[MAX_GDFNAME];
		char GDF_attacksound[MAX_GDFNAME];
		char GDF_painsound[MAX_GDFNAME];
		char GDF_deathsound[MAX_GDFNAME];

		// Engine
		int GDF_doomednum;
		int GDF_spawnhealth;
		int GDF_reactiontime;
		int GDF_painchance;
		fixed_t GDF_radius;
		fixed_t GDF_height;
		int GDF_flags;
		int GDF_flags2;
		int GDF_flags3;

		// Misc
		char GDF_transfx[9];

	} GDFthing_t;

#define ___EEQUOTE(a) #a
#define __EEQUOTE(a) ___EEQUOTE(a)
#define EEMT(x) ((Int32)GDF_FindMobjType(MT2EEClass[x]))
#define EEST(x) ((Int32)GDF_FindState(__EEQUOTE(x)))
#define EESPR(x) ((Int32)GDF_FindSpriteNum(__EEQUOTE(x)))
#endif

#endif
